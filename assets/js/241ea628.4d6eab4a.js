"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8533],{3314:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var i=t(5893),d=t(1151);const r={title:"Feb 15, 2024"},l="Coding Journal: Feb 15, 2024",s={id:"learning-journal/2024/February/20240215",title:"Feb 15, 2024",description:"- Continued with Data Structures for Coding Interview in JavaScript (LinkedList review):",source:"@site/docs/learning-journal/2024/February/20240215.md",sourceDirName:"learning-journal/2024/February",slug:"/learning-journal/2024/February/20240215",permalink:"/docs/learning-journal/2024/February/20240215",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Feb 15, 2024"},sidebar:"tutorialSidebar",previous:{title:"Feb 14, 2024",permalink:"/docs/learning-journal/2024/February/20240214"},next:{title:"Feb 16, 2024",permalink:"/docs/learning-journal/2024/February/20240216"}},a={},o=[{value:"Singly LinkedList Implementation",id:"singly-linkedlist-implementation",level:4},{value:"Reverse LinkedList",id:"reverse-linkedlist",level:4},{value:"Remove Duplicates",id:"remove-duplicates",level:4},{value:"Remove Nth Node From The End",id:"remove-nth-node-from-the-end",level:4},{value:"Find Middle Node Of A LinkedList",id:"find-middle-node-of-a-linkedlist",level:4},{value:"Detect Loop",id:"detect-loop",level:4}];function c(e){const n={code:"code",h1:"h1",h4:"h4",li:"li",pre:"pre",ul:"ul",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"coding-journal-feb-15-2024",children:"Coding Journal: Feb 15, 2024"}),"\n",(0,i.jsx)(n.h1,{id:"1-what-i-learned-and-did-today",children:"1. What I Learned and Did Today"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Continued with Data Structures for Coding Interview in JavaScript (LinkedList review):","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Singly linkedlist implementation"}),"\n",(0,i.jsx)(n.li,{children:"Reverse linkedlist"}),"\n",(0,i.jsx)(n.li,{children:"Remove duplicates"}),"\n",(0,i.jsx)(n.li,{children:"Remove Nth node from the end"}),"\n",(0,i.jsx)(n.li,{children:"Find middle node of a linked list"}),"\n",(0,i.jsx)(n.li,{children:"Detect loop"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h1,{id:"2-question-i-had-today",children:"2. Question I Had Today"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"I didn't have any question for today."}),"\n"]}),"\n",(0,i.jsx)(n.h1,{id:"3-what-i-found-challenging",children:"3. What I Found Challenging"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"I didn't find anything challenging for today."}),"\n"]}),"\n",(0,i.jsx)(n.h1,{id:"4-code-i-wrote-today",children:"4. Code I Wrote Today"}),"\n",(0,i.jsx)(n.h4,{id:"singly-linkedlist-implementation",children:"Singly LinkedList Implementation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",metastring:'title="singly-linkedlist.js"',children:'class Node {\n    constructor(data) {\n        this.data = data;\n        this.next = null;\n    }\n}\n\nclass LinkedList {\n    constructor() {\n        this.head = null;\n    }\n\n    isEmpty() {\n        if (this.head === null) {\n            return true;\n        }\n        return false;\n    }\n\n    printList() {\n        let cur = this.head;\n        while (cur !== null) {\n            console.log(cur.data);\n            cur = cur.next;\n        }\n        return this;\n    }\n\n    insertAtTail(data) {\n        if (this.isEmpty()) {\n            this.head = new Node(data=data);\n            return this;\n        }\n        // traverse to tail\n        let cur = this.head;\n        while (cur.next !== null) {\n            cur = cur.next;\n        }\n        cur.next = new Node(data=data);\n        return this;\n    }\n\n    insertAtHead(data) {\n        if (this.isEmpty()) {\n            this.head = new Node(data=data);\n            return this;\n        }\n        let newNode = new Node(data=data);\n        newNode.next = this.head;\n        this.head = newNode;\n        return this;\n    }\n\n    search(data) {\n        if (this.isEmpty()) return false;\n        let cur = this.head;\n        while (cur !== null) {\n            if (cur.data === data) {\n                return true;\n            }\n            cur = cur.next;\n        }\n        return false;\n    }\n\n    deleteAtHead() {\n        if (this.isEmpty()) return this;\n        this.head = this.head.next;\n    }\n\n    delete(data) {\n        if (this.isEmpty()) return;\n        let cur = this.head;\n        while (cur !== null) {\n            if (cur.next.data === data) {\n                cur.next = cur.next.next;\n                return this;\n            }\n            cur = cur.next;\n        }\n        return this;\n    }\n    \n}\n\n\nvar myLinkedList = new LinkedList();\nconsole.log(myLinkedList.isEmpty())\nmyLinkedList.head = new Node(1);\nmyLinkedList.head.next = new Node(2);\nmyLinkedList.head.next.next = new Node(3);\nmyLinkedList.head.next.next.next = new Node(4);\nmyLinkedList.head.next.next.next.next = new Node(5);\nconsole.log(myLinkedList.isEmpty())\nmyLinkedList.printList()\nconsole.log("Insert 2 more nodes");\nmyLinkedList.insertAtTail(10);\nmyLinkedList.insertAtHead(20);\nmyLinkedList.printList();\nconsole.log(myLinkedList.search(10));  // true\nconsole.log(myLinkedList.search(3)); // true\nconsole.log(myLinkedList.search(100)); // false\nconsole.log("Delete at head");\nmyLinkedList.deleteAtHead();\nmyLinkedList.printList();\nconsole.log("Delete node 5");\nmyLinkedList.delete(5);\nconsole.log("Delete node 10");\nmyLinkedList.delete(10);\nmyLinkedList.printList();\n\n'})}),"\n",(0,i.jsx)(n.h4,{id:"reverse-linkedlist",children:"Reverse LinkedList"}),"\n",(0,i.jsx)(n.h4,{id:"remove-duplicates",children:"Remove Duplicates"}),"\n",(0,i.jsx)(n.h4,{id:"remove-nth-node-from-the-end",children:"Remove Nth Node From The End"}),"\n",(0,i.jsx)(n.h4,{id:"find-middle-node-of-a-linkedlist",children:"Find Middle Node Of A LinkedList"}),"\n",(0,i.jsx)(n.h4,{id:"detect-loop",children:"Detect Loop"})]})}function h(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>l});var i=t(7294);const d={},r=i.createContext(d);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);