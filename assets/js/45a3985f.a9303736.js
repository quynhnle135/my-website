"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6644],{744:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var s=r(5893),t=r(1151);const a={title:"Dec 17, 2023"},i="Coding Journal: Dec 17, 2023",o={id:"learning-journal/2023/December/20231217",title:"Dec 17, 2023",description:"- Continued with my News Generator project. Here's what my plan I got for my project so far:",source:"@site/docs/learning-journal/2023/December/20231217.md",sourceDirName:"learning-journal/2023/December",slug:"/learning-journal/2023/December/20231217",permalink:"/docs/learning-journal/2023/December/20231217",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Dec 17, 2023"},sidebar:"tutorialSidebar",previous:{title:"Dec 16, 2023",permalink:"/docs/learning-journal/2023/December/20231216"},next:{title:"Dec 18, 2023",permalink:"/docs/learning-journal/2023/December/20231218"}},l={},c=[];function d(e){const n={code:"code",h1:"h1",li:"li",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"coding-journal-dec-17-2023",children:"Coding Journal: Dec 17, 2023"}),"\n",(0,s.jsx)(n.h1,{id:"1-what-i-learned-and-did-today",children:"1. What I Learned and Did Today"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Continued with my News Generator project. Here's what my plan I got for my project so far:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Make a CLI tool that users can interact with news API by providing category, keywords, date, language, and date, etc."}),"\n",(0,s.jsxs)(n.li,{children:["Task schedule with Cron to add 10 articles to my website in Tech Blogs section daily","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Create templates to represent these articles the tool returns"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"2-questions-i-have",children:"2. Questions I Have"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["What are the differences between ",(0,s.jsx)("b",{children:"everything, top-headlines, and sources endpoints in News API?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Everything: ",(0,s.jsx)(n.code,{children:"https://newsapi.org/v2/everything"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)("i",{children:(0,s.jsx)("b",{children:"everything"})})," endpoint allows you to search through ",(0,s.jsx)("b",{children:"a vast database of articles published by various news sources"})]}),"\n",(0,s.jsxs)(n.li,{children:["You can use it to find articles ",(0,s.jsx)("b",{children:"matching a specific query"}),"; ",(0,s.jsx)("b",{children:"filter"})," articles by dates, languages, or ",(0,s.jsx)("b",{children:"sort"})," them by relevance, popularity, or date of publications"]}),"\n",(0,s.jsxs)(n.li,{children:["This endpoint is ",(0,s.jsx)("b",{children:"useful for conducting in-depth research on a specific topic"})," or tracking the coverage of a particular story overtime"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Top-headlines: ",(0,s.jsx)(n.code,{children:"https://newsapi.org/v2/top-headlines"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)("i",{children:(0,s.jsx)("b",{children:"top-headlines"})})," endpoint provides the latest headlines from major news publishers"]}),"\n",(0,s.jsxs)(n.li,{children:["It allows you to ",(0,s.jsx)("b",{children:"filter"})," headlines by country, category, or specific sources. You can also ",(0,s.jsx)("b",{children:"search"})," for headlines containing specific keywords"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)("b",{children:(0,s.jsx)("i",{children:"This endpoint is ideal for applications that require the latest new updates, such as news aggregators or dashboards that display the latest headlines in real time."})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Source: ",(0,s.jsx)(n.code,{children:"https://newsapi.org/v2/top-headlines/sources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)("i",{children:(0,s.jsx)("b",{children:"sources"})})," endpoint gives information about the news sources available in the News API database"]}),"\n",(0,s.jsx)(n.li,{children:"It allows you to filter sources by criteria such as country, language, and category"}),"\n",(0,s.jsx)(n.li,{children:"This endpoint is useful for understanding the range of sources available and for selecting specific sources to focus on when using the other endpoints"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["What is ",(0,s.jsx)(n.code,{children:'nargs="?"'})," in argparse?","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The command-line option can be followed by zero or once command-line arguments"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["What is ",(0,s.jsx)(n.code,{children:'action="store_true"'})," in argparse?","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["This is used to creating a boolean flag. Because in my my function, it's checking if ",(0,s.jsx)(n.code,{children:"args.publisher"})," is True before calling the ",(0,s.jsx)(n.code,{children:"get_publishers"}),". Pass only the necessary arguments (category, country, or language)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"3-what-i-found-challenging",children:"3. What I Found Challenging"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When working with ",(0,s.jsx)(n.code,{children:"get_publishers"}),", I want to make the function able to receive optional argumments such as ",(0,s.jsx)(n.code,{children:"category"}),", ",(0,s.jsx)(n.code,{children:"country"}),", or ",(0,s.jsx)(n.code,{children:"language"}),", so I used params to make it easier and shorter when modifying the ",(0,s.jsx)(n.code,{children:"base_url"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"params"})," variable is used to construct the query parameters for the API request to the News API"]}),"\n",(0,s.jsx)(n.li,{children:"This variable is a dictionary that maps parameter names to their values, which are then appended to the API request URL as query strings"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["To get publishers in the main file, I want user to get retrieved data either they provide any arguments or not:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If they don't provide any argument \u2192 Return 10 general publishers"}),"\n",(0,s.jsxs)(n.li,{children:["Users can give optional arguments ",(0,s.jsx)(n.code,{children:"category"}),", ",(0,s.jsx)(n.code,{children:"country"}),", or ",(0,s.jsx)(n.code,{children:"language"})," to make it more detailed as well"]}),"\n",(0,s.jsxs)(n.li,{children:["Therefore I need to add ",(0,s.jsx)(n.code,{children:'action="store_true"'})," in while adding argument for this command-line to make the ",(0,s.jsx)(n.code,{children:"args.publisher"})," True before calling the function."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"4-code-i-wrote-today",children:"4. Code I Wrote Today"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Updated three main functions for News Generator"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="articles_generator.py"',children:'import requests\nfrom datetime import date, timedelta\nfrom api_key import header\n\n\ndef get_publishers(args):\n    base_url = "https://newsapi.org/v2/top-headlines/sources"\n    params = {}\n\n    # Adding provided arguments to the parameters\n    if args.category:\n        params["category"] = args.category.lower()\n    if args.language:\n        params["language"] = args.language.lower()\n    if args.country:\n        params["country"] = args.country.lower()\n\n    # Fetching data from the API\n    try:\n        response = requests.request(method="GET", url=base_url, headers=header, params=params).json()\n        sources = response["sources"][:10]\n\n        # Displaying each source with detail\n        for count, source in enumerate(sources, start=1):\n            print(f"{count}. {source[\'name\']}\\n"\n                  f"Description: {source[\'description\']}\\n"\n                  f"Check their website: {source[\'url\']}\\n")\n        return response\n    except requests.RequestException as e:\n        print(f"An error occurred: {e}")\n\n\ndef get_latest_articles(args):\n    base_url = "https://newsapi.org/v2/everything"\n    params = {\n        "q": "technology", # Default query\n        "language": "en",  # Default language\n        "sortBy": "popularity"  # Default sorting\n    }\n\n    # Adding provided arguments to the parameters\n    if args.keyword:\n        params["qInTitle"] = args.keyword\n    if args.sortby:\n        params["sortBy"] = args.sortby\n    if args.domain:\n        params["domains"] = args.domain\n    if args.category:\n        params["category"] = args.category\n    if args.language:\n        params["language"] = args.language\n\n    try:\n        response = requests.request(method="GET", url=base_url, headers=header, params=params).json()\n        articles = response["articles"][:10]\n        for count, article in enumerate(articles, start=1):\n            print(f"{count}. {article[\'title\']}\\n"\n                  f"Written by: {article[\'author\']}\\n"\n                  f"Description: {article[\'description\']}\\n"\n                  f"Read the full article at: {article[\'url\']}\\n")\n        return response\n    except requests.RequestException as e:\n        print(f"An error occurred: {e}")\n\n\ndef get_this_week_articles(args):\n    today = date.today()\n    start_date = today - timedelta(days=today.weekday())\n    end_date = start_date + timedelta(days=6)\n    formatted_start_date = date.strftime(start_date, "%Y-%m-%d")\n    formatted_end_date = date.strftime(end_date, "%Y-%m-%d")\n    base_url = f"https://newsapi.org/v2/everything"\n    params = {\n        "from": formatted_start_date,\n        "to": formatted_end_date,\n        "q": "technology",\n        "sortBy": "popularity",\n        "language": "en"\n    }\n\n    # Adding provided arguments to the parameters\n    if args.keyword:\n        params["qInTitle"] = args.keyword\n    if args.sortby:\n        params["sortBy"] = args.sortby\n    if args.domain:\n        params["domains"] = args.domain\n    if args.category:\n        params["category"] = args.category\n    if args.language:\n        params["language"] = args.language\n\n    try:\n        response = requests.request(method="GET", url=base_url, headers=header, params=params).json()\n        articles = response["articles"][:10]\n        for count, article in enumerate(articles, start=1):\n            print(f"{count}. {article[\'title\']}\\n"\n                  f"Written by: {article[\'author\']}\\n"\n                  f"Description: {article[\'description\']}\\n"\n                  f"Read the full article at: {article[\'url\']}\\n")\n        return response\n    except requests.RequestException as e:\n        print(f"An error occurred: {e}")\n\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Created command-lines for News Generator CLI tool"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="main.py"',children:'import articles_generator\nimport argparse\n\n\ndef main():\n    parser = argparse.ArgumentParser(description="Tech News Generator")\n    parser.add_argument("-p", "--publishers", action="store_true",\n                        help="Retrieve a list of top news publishers. Can be filtered by category, country, and language.")\n    parser.add_argument("-a", "--articles", action="store_true",\n                        help="Fetch the latest news articles. Filters like keyword, sortby, domain, category, country, and language can be applied.")\n    parser.add_argument("-w", "--weekly", action="store_true", help="Fetch the latest news articles of this week. Filters like keyword, sortby, domain, category, country, and language can be applied.")\n\n    # Optional arguments\n    parser.add_argument("-ca", "--category", type=str,\n                        help="Filter publishers/articles by a specific news category (e.g., \'business\', \'sports\'). Applies to both publishers and articles.")\n    parser.add_argument("-co", "--country", type=str,\n                        help="Filter publishers/articles by country using ISO country codes (e.g., \'us\' for the United States, \'gb\' for Great Britain). Applies to both publishers and articles.")\n    parser.add_argument("-la", "--language", type=str,\n                        help="Filter publishers/articles by language using ISO language codes (e.g., \'en\' for English, \'es\' for Spanish). Applies to both publishers and articles.")\n    parser.add_argument("-k", "--keyword", type=str, help="Search articles with a specific keyword in the title.")\n    parser.add_argument("-do", "--domain", type=str, help="Search articles in a specific domain.")\n    parser.add_argument("-so", "--sortby", type=str, choices=[\'publishedAt\', \'relevancy\', \'popularity\'],\n                        help="Sort retrieved articles by \'publishedAt\', \'relevancy\', or \'popularity\'. Applicable only for articles.")\n\n    args = parser.parse_args()\n\n    if args.publishers:\n        print("---10  Publishers---")\n        articles_generator.get_publishers(args)\n\n    if args.articles:\n        print("---10 Latest Articles---")\n        articles_generator.get_latest_articles(args)\n\n    if args.weekly:\n        print("---10 Articles of this week---")\n        articles_generator.get_this_week_articles(args)\n\n\nif __name__ == "__main__":\n    main()\n\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>i});var s=r(7294);const t={},a=s.createContext(t);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);