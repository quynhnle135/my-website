"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9896],{369:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>m,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var t=i(5893),r=i(1151);const s={title:"Aug 23",description:"Wed, Aug 23"},a=void 0,d={id:"daily-practice/2023/August/aug_23_23",title:"Aug 23",description:"Wed, Aug 23",source:"@site/docs/daily-practice/2023/August/aug_23_23.md",sourceDirName:"daily-practice/2023/August",slug:"/daily-practice/2023/August/aug_23_23",permalink:"/my-website/docs/daily-practice/2023/August/aug_23_23",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Aug 23",description:"Wed, Aug 23"},sidebar:"tutorialSidebar",previous:{title:"Aug 22",permalink:"/my-website/docs/daily-practice/2023/August/aug_22_23"},next:{title:"Aug 24",permalink:"/my-website/docs/daily-practice/2023/August/aug_24_23"}},m={},u=[{value:"Best time to buy and sell stocks",id:"best-time-to-buy-and-sell-stocks",level:3},{value:"Sliding Window Maximum",id:"sliding-window-maximum",level:3}];function o(n){const e={code:"code",h3:"h3",pre:"pre",...(0,r.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h3,{id:"best-time-to-buy-and-sell-stocks",children:"Best time to buy and sell stocks"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'def find_best_time_brute_force(prices):\n    max_profit = 0\n    for i in range(len(prices)):\n        buy = prices[i]\n        for j in range(i + 1, len(prices)):\n            cur_profit = prices[j] - buy\n            max_profit = max(max_profit, cur_profit)\n    return max_profit\n\n\n# Sliding Window approach\ndef find_best_time(prices):\n    start = 0\n    max_profit = 0\n    for end in range(len(prices)):\n        if prices[end] <= prices[start]:\n            start = end\n        else:\n            max_profit = max(max_profit, prices[end] - prices[start])\n    return max_profit\n\n\ndef find_best_time_using_min_max(prices):\n    min_price = 10000\n    max_profit = 0\n    for i in range(len(prices)):\n        if prices[i] < min_price:\n            min_price = prices[i]\n        max_profit = max(max_profit, prices[i] - min_price)\n    return max_profit\n\n\ndef main():\n    print(find_best_time_brute_force([7, 1, 5, 3, 6, 4]))  # 5\n    print(find_best_time([7, 1, 5, 3, 6, 4]))\n    print(find_best_time_using_min_max([7, 1, 5, 3, 6, 4]))\n\n    print(find_best_time_brute_force([7, 6, 4, 3, 1]))  # 0\n    print(find_best_time([7, 6, 4, 3, 1]))\n    print(find_best_time_using_min_max([7, 6, 4, 3, 1]))\n\n\nif __name__ == "__main__":\n    main()\n'})}),"\n",(0,t.jsx)(e.h3,{id:"sliding-window-maximum",children:"Sliding Window Maximum"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'from collections import deque\n\n\ndef find_max(s, k):\n    start = end = 0\n    result = []\n    while start < len(s) - k + 1:\n        cur_max = s[start]\n        while end - start + 1 <= k:\n            cur_max = max(cur_max, s[end])\n            end += 1\n        result.append(cur_max)\n        end = start = start + 1\n    return result\n\n\ndef find_max_optimal(nums, k):\n    deq = deque()\n    result = []\n    for i, n in enumerate(nums):\n        # Clean up the window\n        while deq and deq[0] < i - k + 1:\n            # Remove the left-most element\n            deq.popleft()\n\n        while deq and nums[deq[-1]] < n:\n            deq.pop()\n\n        deq.append(i)\n        if i >= k - 1:\n            result.append(nums[deq[0]])\n    return result\n\n\ndef main():\n    nums = [1, 3, -1, -3, 5, 3, 6, 7]\n    k = 3\n    print(find_max(nums, k))\n    print(find_max_optimal(nums, k))  # [3, 3, 5, 5, 6, 7]\n    nums2 = [1, 2, 3, 4, 5, 6, 7]\n    k2 = 4\n    print(find_max(nums2, k2))  # [4, 5, 6, 7]\n    print(find_max_optimal(nums2, k2))\n\n\nif __name__ == "__main__":\n    main()\n\n'})})]})}function c(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(o,{...n})}):o(n)}},1151:(n,e,i)=>{i.d(e,{Z:()=>d,a:()=>a});var t=i(7294);const r={},s=t.createContext(r);function a(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);