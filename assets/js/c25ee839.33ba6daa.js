"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2209],{7498:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>o,frontMatter:()=>u,metadata:()=>s,toc:()=>c});var t=r(5893),a=r(1151);const u={title:"Aug 24",description:"Thu, Aug 24"},i=void 0,s={id:"daily-practice/2023/August/aug_24_23",title:"Aug 24",description:"Thu, Aug 24",source:"@site/docs/daily-practice/2023/August/aug_24_23.md",sourceDirName:"daily-practice/2023/August",slug:"/daily-practice/2023/August/aug_24_23",permalink:"/my-website/docs/daily-practice/2023/August/aug_24_23",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Aug 24",description:"Thu, Aug 24"},sidebar:"tutorialSidebar",previous:{title:"Aug 23",permalink:"/my-website/docs/daily-practice/2023/August/aug_23_23"},next:{title:"Aug 28",permalink:"/my-website/docs/daily-practice/2023/August/aug_28_23"}},m={},c=[{value:"Minimum Subarray Sum",id:"minimum-subarray-sum",level:3},{value:"Maximum Average Subarray",id:"maximum-average-subarray",level:3}];function d(n){const e={code:"code",h3:"h3",pre:"pre",...(0,a.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h3,{id:"minimum-subarray-sum",children:"Minimum Subarray Sum"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def find_min_subarray(nums, target):\n    start = 0\n    res = float('inf')\n    cur_sum = 0\n    for end in range(len(nums)):\n        cur_sum += nums[end]\n        while cur_sum >= target:\n            cur_window_len = end + start - 1\n            res = min(res, cur_window_len)\n            cur_sum -= nums[start]\n\n    if res != float('inf'):\n        return res\n\n    return 0\n\n\ndef main():\n    print(find_min_subarray(nums=[2, 3, 1, 2, 4, 3], target=7))\n    print(find_min_subarray(nums=[2, 3, 4, 5, 9], target=9))\n    print(find_min_subarray(nums=[1, 1, 1, 1, 1], target=11))\n    print(find_min_subarray(nums=[10, 10, 10, 10, 10], target=9))\n\n\nif __name__ == \"__main__\":\n    main()\n"})}),"\n",(0,t.jsx)(e.h3,{id:"maximum-average-subarray",children:"Maximum Average Subarray"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def find_max_sub(nums, k):\n    start = 0\n    res = float('-inf')\n    cur_sum = 0\n    for end in range(len(nums)):\n        cur_sum += nums[end]\n        if (end - start + 1) == k:\n            res = max(res, cur_sum)\n            cur_sum -= nums[start]\n            start += 1\n    return float(res) / k\n\n\ndef main():\n    print(find_max_sub(nums=[1, 12, -5, -6, 50, 3], k=4))  # 12.75\n    print(find_max_sub(nums=[5], k=1))  # 5\n\n\nif __name__ == \"__main__\":\n    main()\n"})})]})}function o(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},1151:(n,e,r)=>{r.d(e,{Z:()=>s,a:()=>i});var t=r(7294);const a={},u=t.createContext(a);function i(n){const e=t.useContext(u);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),t.createElement(u.Provider,{value:e},n.children)}}}]);