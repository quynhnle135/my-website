"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[993],{2747:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=o(5893),s=o(1151);const i={title:"How to improve API performance"},r="How to improve API performance",a={id:"tech-blogs/notes/post_11",title:"How to improve API performance",description:"1. Paginmation",source:"@site/docs/tech-blogs/notes/post_11.md",sourceDirName:"tech-blogs/notes",slug:"/tech-blogs/notes/post_11",permalink:"/docs/tech-blogs/notes/post_11",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"How to improve API performance"},sidebar:"tutorialSidebar",previous:{title:"How to go from Senior to Lead",permalink:"/docs/tech-blogs/notes/post_10"},next:{title:"How to Become a High-Performing Software Team",permalink:"/docs/tech-blogs/notes/post_12"}},c={},l=[{value:"1. Paginmation",id:"1-paginmation",level:2},{value:"2. Asynchronous Logging",id:"2-asynchronous-logging",level:2},{value:"3. Caching",id:"3-caching",level:2},{value:"4. Payload Compression",id:"4-payload-compression",level:2},{value:"5. Connection pool",id:"5-connection-pool",level:2}];function h(e){const n={a:"a",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"how-to-improve-api-performance",children:"How to improve API performance"}),"\n",(0,t.jsx)(n.h2,{id:"1-paginmation",children:"1. Paginmation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"This is a common optimization when the size of the result is large. The results are streaming back to the client to improve the service responsiveness."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"2-asynchronous-logging",children:"2. Asynchronous Logging"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Synchronous logging deals with the disk for every call and can slow down the system."}),"\n",(0,t.jsx)(n.li,{children:"Asynchronous logging sends logs to a lock-free buffer first and immediately returns. The logs will be flushed to the disk periodically. This significantly reduces the I/O overhead"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"3-caching",children:"3. Caching"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We can cache frequently accessed data into a cache. The client can query the cache first instead of visiting the database directly"}),"\n",(0,t.jsx)(n.li,{children:"If there is a cache miss, the client can query from the database."}),"\n",(0,t.jsx)(n.li,{children:"Caches like Redis store data in memory, so the data access is much faster than the database"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"4-payload-compression",children:"4. Payload Compression"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The requests and responses can be compressed using gzip etc so that the transmitted data size is much smaller. This speeds up the upload and download"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"5-connection-pool",children:"5. Connection pool"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"When accessing resources, we often need to load data from the database"}),"\n",(0,t.jsx)(n.li,{children:"Opening the closing db connections add significant overhead. So we should connect the db via a pool of open connections"}),"\n",(0,t.jsx)(n.li,{children:"The connection pool is responsible for managing the connection lifecycle"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["You can read the full article ",(0,t.jsx)(n.a,{href:"https://blog.bytebytego.com/p/ep64-how-to-improve-api-performance?ref=dailydev",children:"here"})]})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>a,a:()=>r});var t=o(7294);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);