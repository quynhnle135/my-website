"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6529],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),m=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=m(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=m(t),c=o,g=u["".concat(l,".").concat(c)]||u[c]||d[c]||a;return t?r.createElement(g,i(i({ref:n},p),{},{components:t})):r.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var m=2;m<a;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1725:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>m});var r=t(7462),o=(t(7294),t(3905));const a={title:"Aug 24",description:"Thu, Aug 24"},i=void 0,s={unversionedId:"learning-journal/2023/August/aug_24_23",id:"learning-journal/2023/August/aug_24_23",title:"Aug 24",description:"Thu, Aug 24",source:"@site/docs/learning-journal/2023/August/aug_24_23.md",sourceDirName:"learning-journal/2023/August",slug:"/learning-journal/2023/August/aug_24_23",permalink:"/my-website/docs/learning-journal/2023/August/aug_24_23",draft:!1,tags:[],version:"current",frontMatter:{title:"Aug 24",description:"Thu, Aug 24"},sidebar:"tutorialSidebar",previous:{title:"August",permalink:"/my-website/docs/category/august"},next:{title:"Aug 25",permalink:"/my-website/docs/learning-journal/2023/August/aug_25_23"}},l={},m=[{value:"Coursera - Django Web Framework",id:"coursera---django-web-framework",level:2},{value:"Working on Little Lemon Restaurant website (HTML, CSS, Django)",id:"working-on-little-lemon-restaurant-website-html-css-django",level:3}],p={toc:m},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"coursera---django-web-framework"},"Coursera - Django Web Framework"),(0,o.kt)("h3",{id:"working-on-little-lemon-restaurant-website-html-css-django"},"Working on Little Lemon Restaurant website (HTML, CSS, Django)"),(0,o.kt)("p",null,"Connecting myapp to myproject"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="myproject/settings.py"',title:'"myproject/settings.py"'},"INSTALLED_APPS = [\n    'myapp.apps.MyappConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n")),(0,o.kt)("p",null,"Connecting the myapp's urls to the project"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="myproject/urls.py"',title:'"myproject/urls.py"'},"from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n]\n")),(0,o.kt)("p",null,"Creating views "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="myapp/views.py"',title:'"myapp/views.py"'},'from django.shortcuts import render\nfrom django.http import HttpResponse\nfrom http.client import HTTPResponse\nfrom .forms import BookingForm\nfrom .models import Menu\n\n# Create your views here.\n\n\ndef home(request):\n    return HttpResponse("<h1>Welcome to Little Lemon!</h1>")\n\n\ndef about(request):\n    about_content = {\'about\': "Little Lemon is a family-owned Mediterranean restaurant, focused on traditional recipes served with a modern twist. The chefs draw inspiration from Italian, Greek, and Turkish culture and have a menu of 12\u201315 items that they rotate seasonally. The restaurant has a rustic and relaxed atmosphere with moderate prices, making it a popular place for a meal any time of the day."}\n    return render(request, "myapp/about.html", {\'content\': about_content})\n\n\ndef menu(request):\n    # about_content = {\'about\': "Little Lemon is a family-owned Mediterranean restaurant, focused on traditional recipes served with a modern twist. The chefs draw inspiration from Italian, Greek, and Turkish culture and have a menu of 12\u201315 items that they rotate seasonally. The restaurant has a rustic and relaxed atmosphere with moderate prices, making it a popular place for a meal any time of the day."}\n    menu_items = Menu.objects.all()\n    items_dict = {"menu": menu_items}\n    return render(request, "myapp/menu.html", items_dict)\n\n\ndef book(request):\n    return HttpResponse("<h1>Make a booking</h1>")\n\n\ndef drinks(request, drink_name):\n    drink = {\n        "mocha": "type of coffee",\n        "tea": "type of beverage",\n        "lemonade": "type of refreshment"\n    }\n    choice_of_drink = drink[drink_name]\n    return HttpResponse(f"<h2>{drink_name}</h2>" + choice_of_drink)\n\n\ndef form_view(request):\n    form = BookingForm()\n    if request.method == "POST":\n        form = BookingForm(request.POST)\n        if form.is_valid():\n            form.save()\n    return render(request, "myapp/booking.html", {"form": form})\n')),(0,o.kt)("p",null,"Connecting the views to the urls"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="myapp/urls.py"',title:'"myapp/urls.py"'},"from . import views\nfrom django.urls import path\n\nurlpatterns = [\n    path('', views.home, name=\"home\"),\n    path('about/', views.about, name=\"about\"),\n    path('menu/', views.menu, name=\"menu\"),\n    path('book/', views.book, name=\"book\"),\n    path('drinks/<str:drink_name>/', views.drinks, name=\"drink_name\"),\n    path('booking/', views.form_view, name=\"form_view\"),\n]\n")),(0,o.kt)("p",null,"Creating models for the app"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="myapp/models.py"',title:'"myapp/models.py"'},"from django.db import models\n\n# Create your models here.\n\n\nclass DrinksCategory(models.Model):\n    category_name = models.CharField(max_length=200)\n\n\nclass Drink(models.Model):\n    drink = models.CharField(max_length=200)\n    price = models.IntegerField()\n    category_id = models.ForeignKey(\n        DrinksCategory, on_delete=models.PROTECT, default=None)\n\n    def __str__(self) -> str:\n        return self.drink\n\n\nclass Booking(models.Model):\n    first_name = models.CharField(max_length=200)\n    last_name = models.CharField(max_length=200)\n    guest_count = models.IntegerField()\n    reservation_time = models.DateField(auto_now=True)\n    comments = models.CharField(max_length=1000)\n\n\nclass Menu(models.Model):\n    name = models.CharField(max_length=200)\n    price = models.IntegerField()\n\n    def __str__(self) -> str:\n        return self.name\n")),(0,o.kt)("p",null,"Registering models to admin site"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="myapp/admin.py"',title:'"myapp/admin.py"'},"from django.contrib import admin\nfrom .models import Drink, DrinksCategory, Booking, Menu\n\n# Register your models here.\n\nadmin.site.register(DrinksCategory)\nadmin.site.register(Drink)\nadmin.site.register(Booking)\nadmin.site.register(Menu)\n")),(0,o.kt)("p",null,"Creating form "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="myapp/forms.py"',title:'"myapp/forms.py"'},'from .models import Booking\nfrom django.forms import ModelForm\n\n\nclass BookingForm(ModelForm):\n    class Meta:\n        model = Booking\n        fields = "__all__"\n')))}d.isMDXComponent=!0}}]);