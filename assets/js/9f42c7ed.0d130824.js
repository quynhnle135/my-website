"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3359],{6161:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var i=n(5893),r=n(1151);const c={title:"Binary Tree - DFS"},o=void 0,a={id:"daily-practice/leetcode75/dfs",title:"Binary Tree - DFS",description:"",source:"@site/docs/daily-practice/leetcode75/dfs.md",sourceDirName:"daily-practice/leetcode75",slug:"/daily-practice/leetcode75/dfs",permalink:"/my-website/docs/daily-practice/leetcode75/dfs",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Binary Tree - DFS"},sidebar:"tutorialSidebar",previous:{title:"Binary Tree",permalink:"/my-website/docs/daily-practice/leetcode75/binary_search_tree"},next:{title:"Linked List",permalink:"/my-website/docs/daily-practice/leetcode75/linked_list"}},s={},d=[];function l(e){return(0,i.jsx)(i.Fragment,{})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l()}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>o});var i=n(7294);const r={},c=i.createContext(r);function o(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);