"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6309],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),l=c(n),p=i,g=l["".concat(s,".").concat(p)]||l[p]||f[p]||a;return n?r.createElement(g,u(u({ref:t},d),{},{components:n})):r.createElement(g,u({ref:t},d))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,u=new Array(a);u[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[l]="string"==typeof e?e:i,u[1]=o;for(var c=2;c<a;c++)u[c]=n[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8594:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>u,default:()=>f,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={title:"Aug 22",description:"Tue, Aug 22"},u=void 0,o={unversionedId:"leetcode-grinding/2023/August/aug_22_23",id:"leetcode-grinding/2023/August/aug_22_23",title:"Aug 22",description:"Tue, Aug 22",source:"@site/docs/leetcode-grinding/2023/August/aug_22_23.md",sourceDirName:"leetcode-grinding/2023/August",slug:"/leetcode-grinding/2023/August/aug_22_23",permalink:"/my-website/docs/leetcode-grinding/2023/August/aug_22_23",draft:!1,tags:[],version:"current",frontMatter:{title:"Aug 22",description:"Tue, Aug 22"},sidebar:"tutorialSidebar",previous:{title:"Aug 21",permalink:"/my-website/docs/leetcode-grinding/2023/August/aug_21_23"},next:{title:"Aug 23",permalink:"/my-website/docs/leetcode-grinding/2023/August/aug_23_23"}},s={},c=[{value:"Longest Substring Without Repeating Characters",id:"longest-substring-without-repeating-characters",level:4},{value:"Fruit Into Baskets",id:"fruit-into-baskets",level:4}],d={toc:c},l="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(l,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"longest-substring-without-repeating-characters"},"Longest Substring Without Repeating Characters"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'``` python\ndef find_longest_subarray(s):\n    start = 0\n    char_dict = {}\n    max_length = 0\n    for end in range(len(s)):\n        if s[end] in char_dict:\n            start = max(start, char_dict[s[end]] + 1)\n        char_dict[s[end]] = end\n        max_length = max(max_length, end - start + 1)\n\n    return max_length\n\n\ndef main():\n    print(find_longest_subarray("abcabcbb"))  # 3\n    print(find_longest_subarray("aaa"))  # 1\n    print(find_longest_subarray("pwwkew"))  # 3\n    print(find_longest_subarray("dvdf"))  # 3\n    print(find_longest_subarray("abbaa"))\n\n\nif __name__ == "__main__":\n    main()\n\n```\n')),(0,i.kt)("h4",{id:"fruit-into-baskets"},"Fruit Into Baskets"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'``` python\ndef find_max_fruit(trees):\n    start = 0\n    fruit_dict = {}\n    max_fruit = 0\n    for end in range(len(trees)):\n        if trees[end] in fruit_dict:\n            fruit_dict[trees[end]] += 1\n        else:\n            fruit_dict[trees[end]] = 1\n\n        while len(fruit_dict) > 2:\n            fruit_dict[trees[start]] -= 1\n            if fruit_dict[trees[start]] == 0:\n                del fruit_dict[trees[start]]\n            start += 1\n        max_fruit = max(max_fruit, end - start + 1)\n\n    return max_fruit\n\ndef main():\n    print(find_max_fruit(trees=[1, 2, 3, 2, 2]))  # 4\n    print(find_max_fruit(trees=[0, 1, 2, 2]))  # 3\n    print(find_max_fruit(trees=[1, 1, 1, 1]))  # 4\n    print(find_max_fruit(trees=[1]))  # 1\n    print(find_max_fruit(trees=[1, 2, 1]))  # 3\n\n\nif __name__ == "__main__":\n    main()\n```\n')))}f.isMDXComponent=!0}}]);