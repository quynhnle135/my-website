"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4784],{3148:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=n(5893),r=n(1151);const i={title:"Writing tests for Expense Manager project (2)"},l="How I Wrote Tests for Expense Manager project - URLs",o={id:"troubleshooting/testing/writing_test_2",title:"Writing tests for Expense Manager project (2)",description:"1. About Test Coverage",source:"@site/docs/troubleshooting/testing/writing_test_2.md",sourceDirName:"troubleshooting/testing",slug:"/troubleshooting/testing/writing_test_2",permalink:"/docs/troubleshooting/testing/writing_test_2",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Writing tests for Expense Manager project (2)"},sidebar:"tutorialSidebar",previous:{title:"Writing tests for Expense Manager project (1)",permalink:"/docs/troubleshooting/testing/writing_test_1"},next:{title:"Writing tests for Expense Manager project (3)",permalink:"/docs/troubleshooting/testing/writing_test_3"}},a={},c=[{value:"1. About Test Coverage",id:"1-about-test-coverage",level:2},{value:"2. Do I really need to test the urls.py file in my Django app?",id:"2-do-i-really-need-to-test-the-urlspy-file-in-my-django-app",level:2},{value:"3. How I Wrote Tests for url.py file?",id:"3-how-i-wrote-tests-for-urlpy-file",level:2},{value:"4. Let&#39;s take one test as an example",id:"4-lets-take-one-test-as-an-example",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"how-i-wrote-tests-for-expense-manager-project---urls",children:"How I Wrote Tests for Expense Manager project - URLs"}),"\n",(0,t.jsx)(s.h2,{id:"1-about-test-coverage",children:"1. About Test Coverage"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["While I wrote tests, I needed to make sure they all worked and cover the file I was testing. However, when I ran ",(0,t.jsx)(s.code,{children:"python3 -m coverage report -m"}),", there are some files that I don't think they're necessary in the testing process and report such as migrations and the test files themselves."]}),"\n",(0,t.jsxs)(s.li,{children:["Therefore, I need to exclude unnecessary files:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Create a ",(0,t.jsx)("b",{children:".coveragerc"})," file (",(0,t.jsx)(s.code,{children:"touch .coveragerc"}),") and add rules to exclude certain patterns:","\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ini",children:"[run]\nomit =\n    */migrations/*\n    */tests.py\n    */tests/*\n    */__init__.py\n    manage.py\n    */settings.py\n    */urls.py\n    */wsgi.py\n    */asgi.py\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"2-do-i-really-need-to-test-the-urlspy-file-in-my-django-app",children:"2. Do I really need to test the urls.py file in my Django app?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Yes, testing the ",(0,t.jsx)("b",{children:"urls.py"})," file in a Django application is important:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Ensuring correct URL-To-View Mapping:"}),"\n",(0,t.jsx)(s.li,{children:"Catching typos and configuration errors"}),"\n",(0,t.jsx)(s.li,{children:"Verifying URL parameters and patterns"}),"\n",(0,t.jsx)(s.li,{children:"Improve code coverage"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"3-how-i-wrote-tests-for-urlpy-file",children:"3. How I Wrote Tests for url.py file?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Writing tests for ",(0,t.jsx)("b",{children:"urls.py"})," is quite easy in opinion."]}),"\n",(0,t.jsx)(s.li,{children:'In Django testing, "reverse" and "resolve" are two functions that play important rols in testing URLs and views.'}),"\n",(0,t.jsxs)(s.li,{children:["Reverse:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)("b",{children:"reverse"})," fucntion is used to dynamically find a URL path based on a URL name."]}),"\n",(0,t.jsxs)(s.li,{children:["Instead of hardcoding URL paths like ",(0,t.jsx)(s.a,{href:"http://localhost:8000/expenses/update/1",children:"http://localhost:8000/expenses/update/1"}),", we can just have ",(0,t.jsx)(s.code,{children:"url = reverse(expense-update)"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["Resolve:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)("b",{children:"resolve"})," function is used to find which view function correspond to a give URL path. It's the reverse of ",(0,t.jsx)("b",{children:"reverse"})]}),"\n",(0,t.jsxs)(s.li,{children:["You use ",(0,t.jsx)("b",{children:"resolve"})," to verify that a particular URL path resolves to the correct view function or class. This is the key for ensuring that your URL configuration correctly maps URLs to views."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"4-lets-take-one-test-as-an-example",children:"4. Let's take one test as an example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'def test_register_url():\n    url = reverse("register")\n    assert resolve(url).func.view_class == views.UserRegisterView\n'})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"With this test, I want to test the URL for user register."}),"\n",(0,t.jsxs)(s.li,{children:["The first line ",(0,t.jsx)(s.code,{children:'url = reverse("register")'})," is setting up the url mapping to the UserRegisterView"]}),"\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.code,{children:"assert"})," line is resolving the url to the function but since I wrote a class-based view for register functionality, I need to add ",(0,t.jsx)(s.code,{children:"view_class"})," and it needs to be equal to ",(0,t.jsx)(s.code,{children:"views.UserReigsterView"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Here are all the tests I wrote for ",(0,t.jsx)("b",{children:"urls.py"})," for expense_manager_app"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",metastring:'title="tests/test_urls.py',children:'from django.urls import reverse, resolve\nfrom expense_manager_app import views\nfrom django.contrib.auth import views as auth_views\n\n\ndef test_register_url():\n    url = reverse("register")\n    assert resolve(url).func.view_class == views.UserRegisterView\n\n\ndef test_login_url():\n    url = reverse("login")\n    assert resolve(url).func.view_class == auth_views.LoginView\n\n\ndef test_logout_url():\n    url = reverse("logout")\n    assert resolve(url).func.view_class == auth_views.LogoutView\n\n\ndef test_expense_list_url():\n    url = reverse("expense-list")\n    assert resolve(url).func.view_class == views.ExpenseListView\n\n\ndef test_expense_search_url():\n    url = reverse("expense-search")\n    assert resolve(url).func.view_class == views.ExpenseSearchView\n\n\ndef test_expense_detail_url():\n    url = reverse("expense-detail", args=[1])\n    assert resolve(url).func.view_class == views.ExpenseDetailView\n\n\ndef test_expense_add_url():\n    url = reverse("expense-add")\n    assert resolve(url).func.view_class == views.ExpenseCreateView\n\n\ndef test_expense_update_url():\n    url = reverse("expense-update", args=[1])\n    assert resolve(url).func.view_class == views.ExpenseUpdateView\n\n\ndef test_expense_delete_url():\n    url = reverse("expense-delete", args=[1])\n    assert resolve(url).func.view_class == views.ExpenseDeleteView\n\n'})})]})}function u(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>o,a:()=>l});var t=n(7294);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);