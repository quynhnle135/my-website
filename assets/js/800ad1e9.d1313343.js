"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9727],{3291:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var i=e(5893),t=e(1151);const a={title:"Jan 26, 2024"},s="Coding Journal: Jan 26, 2024",d={id:"learning-journal/2024/January/20240126",title:"Jan 26, 2024",description:"- Continued with job search (18 applications)",source:"@site/docs/learning-journal/2024/January/20240126.md",sourceDirName:"learning-journal/2024/January",slug:"/learning-journal/2024/January/20240126",permalink:"/docs/learning-journal/2024/January/20240126",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Jan 26, 2024"},sidebar:"tutorialSidebar",previous:{title:"Jan 25, 2024",permalink:"/docs/learning-journal/2024/January/20240125"},next:{title:"Jan 29, 2024",permalink:"/docs/learning-journal/2024/January/20240129"}},o={},l=[];function m(n){const r={a:"a",code:"code",h1:"h1",li:"li",pre:"pre",ul:"ul",...(0,t.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"coding-journal-jan-26-2024",children:"Coding Journal: Jan 26, 2024"}),"\n",(0,i.jsx)(r.h1,{id:"1-what-i-learned-and-did-today",children:"1. What I Learned and Did Today"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Continued with job search (18 applications)"}),"\n",(0,i.jsxs)(r.li,{children:["Continued solving Leetcode to prepare for technical interviews:","\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Rotate array"}),"\n",(0,i.jsx)(r.li,{children:"Search in rotated array"}),"\n",(0,i.jsx)(r.li,{children:"Find minimum in rotated array"}),"\n",(0,i.jsx)(r.li,{children:"Minimum path sum"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h1,{id:"2-question-i-had",children:"2. Question I Had"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"I don't have any question for today."}),"\n"]}),"\n",(0,i.jsx)(r.h1,{id:"3-what-i-found-challenging",children:"3. What I Found Challenging"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"I don't find anything challenging today."}),"\n"]}),"\n",(0,i.jsx)(r.h1,{id:"4-code-i-wrote-today",children:"4. Code I Wrote Today"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://leetcode.com/problems/rotate-array/description/",children:"Rotate array"})}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'from typing import List\n\n\ndef rotate_array_1(arr: List[int], k: int) -> List[int]:\n    arr_len = len(arr)\n    first_half = arr[arr_len - k:]\n    second_half = arr[:arr_len - k]\n    arr = first_half + second_half\n    return arr\n\n\ndef rotate_array_2(arr: List[int], k: int) -> List[int]:\n    k = k % len(arr)\n    if k == 0:\n        return arr\n    reverse(start=0, end=len(arr) - 1, arr=arr)\n    reverse(start=0 , end=k - 1, arr=arr)\n    reverse(start=k, end=len(arr) - 1, arr=arr)\n\n    return arr\n\n\ndef reverse(start: int, end: int, arr: List[int]) -> None:\n    while start < end:\n        arr[start], arr[end] = arr[end], arr[start]\n        start += 1\n        end -= 1\n\n\ndef main():\n    print(rotate_array_1([1, 2, 3, 4, 5, 6, 7], 3))\n    print(rotate_array_2([1, 2, 3, 4, 5, 6, 7], 3))\n\n\nif __name__ == "__main__":\n    main()\n\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://leetcode.com/problems/search-in-rotated-sorted-array/description/",children:"Search in rotated array"})}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'from typing import List\n\n\ndef search_in_rotated_array(nums: List[int], target: int) -> int:\n    if target not in nums:\n        return -1\n    left = 0\n    right = len(nums) - 1\n    while left <= right:\n        mid = (left + right) // 2\n        if nums[mid] == target:\n            return mid\n        elif nums[left] <= nums[mid]:\n            if nums[left] <= target <= nums[mid]:\n                right = mid - 1\n            else:\n                left = mid + 1\n        else:\n            if nums[mid] <= target <= nums[right]:\n                left = mid + 1\n            else:\n                right = mid - 1\n    return -1\n\n\ndef main():\n    print(search_in_rotated_array(nums=[4, 5, 6, 7, 1, 2, 3], target=0))\n    print(search_in_rotated_array(nums=[4, 5, 6, 7, 1, 2, 3], target=3))\n    print(search_in_rotated_array(nums=[1], target=0))\n\n\nif __name__ == "__main__":\n    main()\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/",children:"Find minimum in rotated array"})}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'from typing import List\n\n\ndef find_min_in_rotated_arr(nums: List[int]) -> int:\n    if len(nums) == 1:\n        return nums[0]\n\n    left = 0\n    right = len(nums) - 1\n\n    # Not rotated\n    if nums[right] > nums[0]:\n        return nums[0]\n\n    while left <= right:\n        mid = (left + right) // 2\n\n        if mid + 1 > len(nums) and nums[mid] > nums[mid + 1]:\n            return nums[mid + 1]\n\n        if mid - 1 >= 0 and nums[mid - 1] > nums[mid]:\n            return nums[mid]\n\n        if nums[mid] > nums[0]:\n            left = mid + 1\n        else:\n            right = mid - 1\n\n\ndef main():\n    print(find_min_in_rotated_arr(nums=[1, 2, 3, 4, 5, 6, 7]))\n    print(find_min_in_rotated_arr(nums=[4, 5, 6, 7, 1, 2, 3]))\n    print(find_min_in_rotated_arr(nums=[2, 3, 4, 5, 6, 7, 1]))\n\n    print(find_min_in_rotated_arr(nums=[10, 20, 30, 40, 50, 60, 70]))\n    print(find_min_in_rotated_arr(nums=[40, 50, 60, 70, 10, 20, 30]))\n    print(find_min_in_rotated_arr(nums=[20, 30, 40, 50, 60, 70, 10]))\n\n\nif __name__ == "__main__":\n    main()\n'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://leetcode.com/problems/minimum-path-sum/description/",children:"Minimum path sum"})}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'from typing import List\n\n\ndef find_min_path_sum(grid: List[List[int]]) -> int:\n    rows = len(grid)\n    cols = len(grid[0])\n    res = [[float("inf")] * (cols + 1) for r in range(rows + 1)]\n    res[rows - 1][cols] = 0\n\n    # Traverse from the bottom-right\n    for row in range(rows - 1, -1, -1):\n        for col in range(cols - 1, -1, -1):\n            res[row][col] = grid[row][col] + min(res[row + 1][col], res[row][col + 1])\n\n    return res[0][0]\n\n\ndef main():\n    print(find_min_path_sum(grid=[[1, 3, 1], [1, 5, 1], [4, 2, 1]]))\n    print(find_min_path_sum(grid=[[1, 2, 3], [4, 5, 6]]))\n\n\nif __name__ == "__main__":\n    main()\n'})})]})}function c(n={}){const{wrapper:r}={...(0,t.a)(),...n.components};return r?(0,i.jsx)(r,{...n,children:(0,i.jsx)(m,{...n})}):m(n)}},1151:(n,r,e)=>{e.d(r,{Z:()=>d,a:()=>s});var i=e(7294);const t={},a=i.createContext(t);function s(n){const r=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function d(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),i.createElement(a.Provider,{value:r},n.children)}}}]);