"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7517],{9874:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var t=i(5893),r=i(1151);const s={title:"Oct 22, 2023"},o="Coding Journal: Oct 22, 2023",a={id:"learning-journal/October/20231022",title:"Oct 22, 2023",description:"What I did today",source:"@site/docs/learning-journal/October/20231022.md",sourceDirName:"learning-journal/October",slug:"/learning-journal/October/20231022",permalink:"/my-website/docs/learning-journal/October/20231022",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Oct 22, 2023"},sidebar:"tutorialSidebar",previous:{title:"Oct 20, 2023",permalink:"/my-website/docs/learning-journal/October/20231020"},next:{title:"Oct 29, 2023",permalink:"/my-website/docs/learning-journal/October/20231029"}},l={},d=[{value:"What I did today",id:"what-i-did-today",level:3},{value:"Notes from Coding Interview Practice Joceline",id:"notes-from-coding-interview-practice-joceline",level:4},{value:"My code for Find the Duplicate Number",id:"my-code-for-find-the-duplicate-number",level:4},{value:"My code for Missing Numbers problem",id:"my-code-for-missing-numbers-problem",level:4}];function c(n){const e={code:"code",h1:"h1",h3:"h3",h4:"h4",li:"li",pre:"pre",ul:"ul",...(0,r.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"coding-journal-oct-22-2023",children:"Coding Journal: Oct 22, 2023"}),"\n",(0,t.jsx)(e.h3,{id:"what-i-did-today",children:"What I did today"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Finished all exercises in Sliding Window category in Leetcode 75:","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Maximum Average Subarray I"}),"\n",(0,t.jsx)(e.li,{children:"Maximum Number of Vowels in a Substring of Given Length"}),"\n",(0,t.jsx)(e.li,{children:"Max Consecutive Ones III"}),"\n",(0,t.jsx)(e.li,{children:"Longest Subarray of 1's After Deleting One Element"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:"Reviewed and tried to finished my To Do List Django project (my goal is to finish deploying it by the end of next week and link it to my resume)"}),"\n",(0,t.jsx)(e.li,{children:"Coding Interview practice Joceline"}),"\n"]}),"\n",(0,t.jsx)(e.h4,{id:"notes-from-coding-interview-practice-joceline",children:"Notes from Coding Interview Practice Joceline"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"She's very new to this coding interview practice so it takes her 50 minutes to solve an easy problem (Squares of sorted array)"}),"\n",(0,t.jsx)(e.li,{children:"She needs to pay more attention to global and local variables, and Javascript syntax. Her code still has a lot of bugs"}),"\n",(0,t.jsx)(e.li,{children:"Instead jumpring right into coding, she should've discussed her approach to solve the given problem"}),"\n",(0,t.jsxs)(e.li,{children:["For my turn, she asked me to 2 easy Array question:","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Find the Duplicate Number: I solve this using dictionary which helped me have the time complexity O(n) and space complexity O(n). However, she also mentioned that I can solve this problem by using marking negative to reach O(1) for space complexity"}),"\n",(0,t.jsx)(e.li,{children:"Missing number: I solved this problem also using a dictionary. I find my solution not too effective since I use three for loops (not nested) to and having another array. Will work on the more optimal solution for this"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:"I solved these two problems pretty quick, it only took me 20 minutes to finish my turn but it think it's because I've seen these problems before"}),"\n",(0,t.jsxs)(e.li,{children:["What I can learn from Joceline:","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Maybe I should apply for apprenticeship to boost up my resume?"}),"\n",(0,t.jsx)(e.li,{children:"I should've finsihed my projects and have my resume ready and send it out."}),"\n",(0,t.jsx)(e.li,{children:"Somehow I find myself a little bit more confident after today's session and have more motivation to speed up my process. It's good to have a girl peer in the same field and situation like me."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:"Our practice shedule: 5:00PM-6:30PM every Monday, Wednesday, and Thursday"}),"\n"]}),"\n",(0,t.jsx)(e.h4,{id:"my-code-for-find-the-duplicate-number",children:"My code for Find the Duplicate Number"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def findDuplicated(nums):\n  num_dict = {}\n  for num in nums:\n    if num in num_dict:\n      return num\n    else:\n      num_dict[num] = 1\n  return -1\n\n\nprint(findDuplicated([2, 1, 5, 2, 3, 3, 4]))  # 2\nprint(findDuplicated([2, 1, 5, 3, 3, 2, 4]))  # 3\nprint(findDuplicated([1, 2, 3, 4]))\n\n\n\n# Given an array of integers between 1 and n, inclusive where n is the length of the array. Write a function that returns the first integer that appears more than once (when array if read from left to right)\n\n# example: [1, 2, 3, 3]\n# 3\n\n#example 2: [2,1,5,2,3,3,4]\n#            ^ ^\n#2\n\n#ex: [2,1,5,3,3,2,4]\n# 3\n\n# second approach: no need to use another data structure\n# use nested loop\n# for i = 0 -> nums.length\n#    for j = i + 1\n#       compare: if nums[i] == nums[j]: return nums[i]\n# return -1\n\n# Time complexity: O(n^2)\n# Space complexity: O(1)\n\n# first approach\n# dictionary {value: appearance}\n# traverse thru the array\n# if the cur value not in the dict: dict[value] = 1\n# else: return value\n# finish for loop, return -1\n# time complexity: O (n)\n# space: O(n)\n\n# notes\n# if no duplicated found -> return -1\n\n"})}),"\n",(0,t.jsx)(e.h4,{id:"my-code-for-missing-numbers-problem",children:"My code for Missing Numbers problem"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"# Youre given an unordered list of unique integers nums in the range [1,n], where n represents the length of nums +2. this means that two numbers in this range are missing from the list. Write a function that takes in this list and returns a new list with the two missing numbers, sorted numerically .\n\n# notes:\n# not sorted list\n# return the sorted of missing numbers\n# no duplicated\n\n# nums = [1,4,3] -> [1, 3, 4]\n#[2,5] n is 5  -> [1,2,3,4,5]\n\n# nums = [1, 2]\n# [3, 4] n = 4 -> [1, 2, 3, 4]\n\n# first approach\n# sort the given nums nums = [1, 3, 4]\n#                             ^\n# n = len(nums) + 2 = 5\n# dict = {1: 1, 2: 1, 3: 1, 4: 1, 5: 1}\n# traverse value in the given nums:\n#    check if current value is in dictionary:\n#             dict[value] -= 1\n# res = []\n# go over the dictionary\n# if dict[value] != 0:\n#     res.append(value)\n# return res\n\n# time: O(n)\n# space: O(n)\n\n\ndef findMissingNumbers(nums):\n  res = []\n  num_dict = {}\n  n = len(nums) + 2\n  for i in range(n):\n    value = i + 1\n    num_dict[value] = 1\n  for num in nums:\n    if num in num_dict:\n      num_dict[num] -= 1\n  for key in num_dict:\n    if num_dict[key] != 0:\n      res.append(key)\n  return res\n\n\nprint(findMissingNumbers([1, 4, 3]))  # 2, 5\nprint(findMissingNumbers([1, 2]))  # 3, 4\n\n"})})]})}function u(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},1151:(n,e,i)=>{i.d(e,{Z:()=>a,a:()=>o});var t=i(7294);const r={},s=t.createContext(r);function o(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);