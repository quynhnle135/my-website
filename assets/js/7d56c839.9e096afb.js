"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3280],{4421:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=r(5893),t=r(1151);const s={title:"Dec 29, 2023"},o="Coding Journal: Dec 29, 2023",l={id:"learning-journal/2023/December/20231229",title:"Dec 29, 2023",description:"- Continued with Leetcode 150:",source:"@site/docs/learning-journal/2023/December/20231229.md",sourceDirName:"learning-journal/2023/December",slug:"/learning-journal/2023/December/20231229",permalink:"/docs/learning-journal/2023/December/20231229",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Dec 29, 2023"},sidebar:"tutorialSidebar",previous:{title:"Dec 28, 2023",permalink:"/docs/learning-journal/2023/December/20231228"},next:{title:"Dec 31, 2023",permalink:"/docs/learning-journal/2023/December/20231231"}},d={},c=[{value:"Arrays/Strings",id:"arraysstrings",level:3},{value:"Graph",id:"graph",level:3}];function a(n){const e={a:"a",code:"code",h1:"h1",h3:"h3",hr:"hr",li:"li",pre:"pre",ul:"ul",...(0,t.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"coding-journal-dec-29-2023",children:"Coding Journal: Dec 29, 2023"}),"\n",(0,i.jsx)(e.h1,{id:"1-what-i-learned-and-did-today",children:"1. What I Learned and Did Today"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Continued with Leetcode 150:","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Array/String:","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Merge Sorted Array"}),"\n",(0,i.jsx)(e.li,{children:"Majority Element"}),"\n",(0,i.jsx)(e.li,{children:"Rotate Array"}),"\n",(0,i.jsx)(e.li,{children:"Jump Game"}),"\n",(0,i.jsx)(e.li,{children:"Jump Game II"}),"\n",(0,i.jsx)(e.li,{children:"Best Time to Buy and Sell Stock II"}),"\n",(0,i.jsx)(e.li,{children:"H-Index"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Graph:","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Number of Islands"}),"\n",(0,i.jsx)(e.li,{children:"Number of Provinces"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h1,{id:"2-questions-i-have",children:"2. Questions I Have"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"I don't have any question for today"}),"\n"]}),"\n",(0,i.jsx)(e.h1,{id:"3-what-i-found-challenging",children:"3. What I Found Challenging"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"I wanted to upgrade my Spotify by trying to create playlist based on liked music videos on Youtube. To do this, I need to interact with Youtube API, but I couldn't get the authorization yet (get stuck at the redicrect URI) \u2192 Will look into it more."}),"\n"]}),"\n",(0,i.jsx)(e.h1,{id:"4-code-i-wrote-today",children:"4. Code I Wrote Today"}),"\n",(0,i.jsx)(e.h3,{id:"arraysstrings",children:"Arrays/Strings"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://leetcode.com/problems/merge-sorted-array/",children:"Merge Sorted Array"}),":"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import List\n\n\ndef merge_sorted_array(nums1: List[int], m: int, nums2: List[int], n: int) -> None:\n    i = m - 1\n    j = n - 1\n    index = len(nums1) - 1\n    while i >= 0 and j >= 0:\n        if nums1[i] > nums2[j]:\n            nums1[index] = nums1[i]\n            i -= 1\n        else:\n            nums1[index] = nums2[j]\n            j -= 1\n        index -= 1\n    while j >= 0:\n        nums1[index] = nums2[j]\n        index -= 1\n        j -= 1\n\n\nnums1 = [1, 2, 3, 0, 0, 0]\nnums2 = [2, 5, 6]\nmerge_sorted_array(nums1, 3, nums2, 3)\nprint(nums1)\n\nnums1 = [0]\nnums2 = [1]\nmerge_sorted_array(nums1, 0, nums2, 1)\nprint(nums1)\n        \n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://leetcode.com/problems/majority-element/",children:"Majority Element"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import List\n\n\ndef majority_element(nums:  List[int]) -> int:\n    nums.sort()\n    return nums[len(nums) // 2]\n\n\ndef majority_element_i(nums: List[int]) -> int:\n    num_dict = {}\n    for num in nums:\n        if num not in num_dict:\n            num_dict[num] = 1\n        else:\n            num_dict[num] += 1\n            if num_dict[num] > len(nums) // 2:\n                return num\n\n\nprint(majority_element([3, 2, 3]))\nprint(majority_element_i([3, 2, 3]))\nprint(majority_element([2, 2, 1, 1, 1, 2, 2]))\nprint(majority_element_i([2, 2, 1, 1, 1, 2, 2]))\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://leetcode.com/problems/rotate-array/",children:"Rotate Array"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import List\n\n\ndef rotate_i(nums: List[int], k: int) -> None:\n    k = k % len(nums)\n    if k == 0 or len(nums) == 1:\n        return\n\n    first = nums[(len(nums) - k):]\n    second = nums[:(len(nums) - k)]\n    i = 0\n    for num in first:\n        nums[i] = num\n        i += 1\n    for num in second:\n        nums[i] = num\n        i += 1\n    return nums\n\n\ndef rotate_ii(nums: List[int], k: int) -> None:\n    k = k % len(nums)\n    if k == 0 or len(nums) == 1:\n        return\n    reverse_array(nums, start=0, end=len(nums) - 1)\n    reverse_array(nums, start=0, end=k - 1)\n    reverse_array(nums, start=k, end=len(nums) - 1)\n    return nums\n\n\ndef reverse_array(nums, start, end) -> None:\n    while start < end:\n        nums[start], nums[end] = nums[end], nums[start]\n        start += 1\n        end -= 1\n\n\nprint(rotate_i(nums=[1, 2, 3, 4, 5, 6, 7], k=3))\nprint(rotate_ii(nums=[1, 2, 3, 4, 5, 6, 7], k=3))\n\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://leetcode.com/problems/jump-game/",children:"Jump Game"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import List\n\n\ndef can_jump_i(nums: List[int]) -> bool:\n    furthest_reach = 0\n    i = 0\n    last_index = len(nums) - 1\n    while (i <= furthest_reach) and (furthest_reach <= last_index):\n        furthest_reach = max(furthest_reach, nums[i] + i)\n        i += 1\n    return furthest_reach >= last_index\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/",children:"Best Time to Buy and Sell Stock II"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import List\n\n\n# Greedy approach\ndef max_profit(prices: List[int]) -> int:\n    profit = 0\n    for i in range(1, len(prices)):\n        if prices[i] > prices[i - 1]:\n            profit += prices[i] - prices[i - 1]\n    return profit\n\n\nprint(max_profit([7, 1, 5, 3, 6, 4]))\nprint(max_profit([1, 2, 3, 4, 5, 6]))\nprint(max_profit([6, 5, 4, 3, 2, 1]))\n\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://leetcode.com/problems/jump-game-ii/",children:"Jump Game II"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import List\n\n\ndef jump(nums: List[int]) -> int:\n    furthest = 0\n    jumps = 0\n    current_end = 0\n    for i in range(len(nums) - 1):\n        furthest = max(furthest, nums[i] + i)\n\n        if i == current_end:\n            jumps += 1\n            current_end = furthest\n            if current_end >= len(nums) - 1:\n                break\n    return jumps\n\n\nprint(jump([1, 2, 3]))\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://leetcode.com/problems/h-index/",children:"H Index"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import List\n\n\ndef h_index(citations: List[int]) -> int:\n    citations.sort(reverse=True)\n    h = 0\n    while h < len(citations) and citations[h] > h:\n        h += 1\n    return h\n\n\nprint(h_index([3, 0, 6, 1, 5]))\nprint(h_index([1, 3, 1]))\nprint(h_index([100]))\nprint(h_index([100, 50, 10, 3]))\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"graph",children:"Graph"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://leetcode.com/problems/number-of-islands/description/?envType=study-plan-v2&envId=top-interview-150",children:"Number of Islands"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import List\n\n\ndef number_of_islands(grid: List[List[str]]) -> int:\n    islands = 0\n    for row in range(len(grid)):\n        for col in range(len(grid[0])):\n            if grid[row][col] == "1":\n                islands += 1\n                count_neighbors(grid, row, col)\n    return islands\n\n\ndef count_neighbors(grid, row, col):\n    if row < 0 or row >= len(grid) or col < 0 or col >= len(grid[0]) or grid[row][col] == "0":\n        return\n    grid[row][col] = "0"\n    count_neighbors(grid, row - 1, col)\n    count_neighbors(grid, row + 1, col)\n    count_neighbors(grid, row, col - 1)\n    count_neighbors(grid, row, col + 1)\n\n\nprint(number_of_islands(grid=[\n                              ["1", "1", "1", "1", "0"],\n                              ["1", "1", "0", "1", "0"],\n                              ["1", "1", "0", "0", "0"],\n                              ["0", "0", "0", "0", "0"]]))\n\nprint(number_of_islands(grid=[\n                              ["0", "1", "1", "1", "0"],\n                              ["0", "0", "0", "1", "0"],\n                              ["1", "1", "0", "0", "0"],\n                              ["0", "0", "0", "0", "0"]]))\n'})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://leetcode.com/problems/number-of-provinces/description/",children:"Number of Provinces"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def count_provinces(grid):\n    visited = [False] * len(grid)\n    provinces = 0\n\n    for i in range(len(grid)):\n        if not visited[i]:\n            provinces += 1\n            check_neighbor(grid, i, visited)\n    return provinces\n\n\ndef check_neighbor(grid, node, visited):\n    visited[node] = True\n    for i in range(len(grid)):\n        if grid[i][node] == 1 and not visited[i]:\n            check_neighbor(grid, node, visited)\n\n"})})]})}function u(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}},1151:(n,e,r)=>{r.d(e,{Z:()=>l,a:()=>o});var i=r(7294);const t={},s=i.createContext(t);function o(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);