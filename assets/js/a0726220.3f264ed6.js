"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4331],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>p});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),d=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=d(e.components);return r.createElement(c.Provider,{value:n},e.children)},f="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),f=d(t),m=i,p=f["".concat(c,".").concat(m)]||f[m]||l[m]||o;return t?r.createElement(p,a(a({ref:n},u),{},{components:t})):r.createElement(p,a({ref:n},u))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[f]="string"==typeof e?e:i,a[1]=s;for(var d=2;d<o;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2997:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=t(7462),i=(t(7294),t(3905));const o={title:"Day 6"},a="Hashmap and Set",s={unversionedId:"leetcode-grinding/leetcode-75/day-6",id:"leetcode-grinding/leetcode-75/day-6",title:"Day 6",description:"2215. Find the Difference of Two Arrays",source:"@site/docs/leetcode-grinding/leetcode-75/day-6.md",sourceDirName:"leetcode-grinding/leetcode-75",slug:"/leetcode-grinding/leetcode-75/day-6",permalink:"/my-website/docs/leetcode-grinding/leetcode-75/day-6",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode-grinding/leetcode-75/day-6.md",tags:[],version:"current",frontMatter:{title:"Day 6"},sidebar:"tutorialSidebar",previous:{title:"Day 5",permalink:"/my-website/docs/leetcode-grinding/leetcode-75/day-5"},next:{title:"Day 7",permalink:"/my-website/docs/leetcode-grinding/leetcode-75/day-7"}},c={},d=[{value:"2215. Find the Difference of Two Arrays",id:"2215-find-the-difference-of-two-arrays",level:4}],u={toc:d},f="wrapper";function l(e){let{components:n,...t}=e;return(0,i.kt)(f,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hashmap-and-set"},"Hashmap and Set"),(0,i.kt)("h4",{id:"2215-find-the-difference-of-two-arrays"},"2215. Find the Difference of Two Arrays"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'def find_differences_i(nums1, nums2):\n    res = []\n    nums1 = set(nums1)\n    first = []\n    second = []\n    for num in nums1:\n        if num not in nums2:\n            first.append(num)\n\n    nums2 = set(nums2)\n    for num in nums2:\n        if num not in nums1:\n            second.append(num)\n    res.append(first)\n    res.append(second)\n    return res\n\n\ndef find_differences_ii(nums1, nums2):\n    nums1 = set(nums1)\n    nums2 = set(nums2)\n    return [list(nums1 - nums2), list(nums2 - nums1)]\n\n\ndef main():\n    print(find_differences_i(nums1=[1, 2, 3], nums2=[2, 4, 6]))\n    print(find_differences_ii(nums1=[1, 2, 3], nums2=[2, 4, 6]))\n\n    print(find_differences_i(nums1=[1, 2, 3, 3], nums2=[1, 1, 2, 2]))\n    print(find_differences_ii(nums1=[1, 2, 3, 3], nums2=[1, 1, 2, 2]))\n\n\nif __name__ == "__main__":\n     main()\n     \n\n')))}l.isMDXComponent=!0}}]);