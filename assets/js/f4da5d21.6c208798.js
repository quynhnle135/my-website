"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9179],{4351:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var t=o(5893),i=o(1151);const s={title:"Aug 26",description:"Fri, Aug 26"},r=void 0,l={id:"learning-journal/2023/August/aug_26_23",title:"Aug 26",description:"Fri, Aug 26",source:"@site/docs/learning-journal/2023/August/aug_26_23.md",sourceDirName:"learning-journal/2023/August",slug:"/learning-journal/2023/August/aug_26_23",permalink:"/my-website/docs/learning-journal/2023/August/aug_26_23",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Aug 26",description:"Fri, Aug 26"},sidebar:"tutorialSidebar",previous:{title:"Aug 25",permalink:"/my-website/docs/learning-journal/2023/August/aug_25_23"},next:{title:"Aug 27",permalink:"/my-website/docs/learning-journal/2023/August/aug_27_23"}},a={},d=[{value:"Doing some exercises about Django REST API",id:"doing-some-exercises-about-django-rest-api",level:2},{value:"Learn about Serializer in Django REST API",id:"learn-about-serializer-in-django-rest-api",level:3},{value:"BookList project",id:"booklist-project",level:4},{value:"BookListAPI app",id:"booklistapi-app",level:4},{value:"The Full Stacj exercises",id:"the-full-stacj-exercises",level:2},{value:"Connect the Little Lemon back-end to MySQL",id:"connect-the-little-lemon-back-end-to-mysql",level:3},{value:"Set up Little Lemon booking API",id:"set-up-little-lemon-booking-api",level:3},{value:"Coursera Notes",id:"coursera-notes",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"doing-some-exercises-about-django-rest-api",children:"Doing some exercises about Django REST API"}),"\n",(0,t.jsx)(n.h3,{id:"learn-about-serializer-in-django-rest-api",children:"Learn about Serializer in Django REST API"}),"\n",(0,t.jsx)(n.h4,{id:"booklist-project",children:"BookList project"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="booklist/settings.py"',children:"INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'BooklistAPI',\n    'rest_framework',\n]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="booklist/urls.py"',children:"from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('BooklistAPI.urls')),\n]\n"})}),"\n",(0,t.jsx)(n.h4,{id:"booklistapi-app",children:"BookListAPI app"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="booklistapi/models.py"',children:"from django.db import models\n\n# Create your models here.\n\n\nclass Book(models.Model):\n    title = models.CharField(max_length=255)\n    author = models.CharField(max_length=255)\n    price = models.DecimalField(max_digits=5, decimal_places=2)\n\n    def __str__(self) -> str:\n        return self.title\n\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="booklistapi/admin.py"',children:"from django.contrib import admin\nfrom .models import Book\n\n# Register your models here.\nadmin.site.register(Book)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="booklistapi/views.py"',children:"from rest_framework import generics\nfrom .models import Book\nfrom .serializers import BookSerializer\n\n\nclass BookView(generics.ListCreateAPIView):\n    queryset = Book.objects.all()\n    serializer_class = BookSerializer\n\n\nclass SingleBookView(generics.RetrieveUpdateAPIView):\n    queryset = Book.objects.all()\n    serializer_class = BookSerializer\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="booklistapi/urls.py"',children:"from django.urls import path\nfrom . import views\n\n\nurlpatterns = [\n    path('books/', views.BookView.as_view()),\n    path('books/<int:pk>/', views.SingleBookView.as_view()),\n]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="booklistapi/serializers.py"',children:"from .models import Book\nfrom rest_framework import serializers\n\n\nclass BookSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Book\n        fields = ['id', 'author', 'price']\n"})}),"\n",(0,t.jsx)(n.h2,{id:"the-full-stacj-exercises",children:"The Full Stacj exercises"}),"\n",(0,t.jsx)(n.h3,{id:"connect-the-little-lemon-back-end-to-mysql",children:"Connect the Little Lemon back-end to MySQL"}),"\n",(0,t.jsx)(n.h3,{id:"set-up-little-lemon-booking-api",children:"Set up Little Lemon booking API"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="restaurant/views.py"',children:"def bookings(request):\n    date = request.GET.get('date', datetime.today().date())\n    bookings = Booking.objects.all()\n    booking_json = serializers.serialize('json', bookings)\n    return render(request, \"booking.html\", {\"bookings\": booking_json})\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="restaurant/ulrs.py"',children:"from django.urls import path\nfrom . import views\n\n\nurlpatterns = [\n    path('', views.home, name=\"home\"),\n    path('about/', views.about, name=\"about\"),\n    path('book/', views.book, name=\"book\"),\n    path('menu/', views.menu, name=\"menu\"),\n    path('menu_item/<int:pk>/', views.display_menu_item, name=\"menu_item\"),\n    path('bookings/', views.bookings, name=\"bookings\"),\n]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:'title="restaurant/forms.py"',children:'from .models import Booking\nfrom django import forms\n\n\nclass BookingForm(forms.ModelForm):\n    class Meta:\n        model = Booking\n        fields = "__all__"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"coursera-notes",children:"Coursera Notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Deployment process","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"To run an application in the Cloud, you need one or multiple servers to upload your application and link them to your domain. This process of uploading code and data to the servers is called Deployment"}),"\n",(0,t.jsxs)(n.li,{children:["There are two types of deployment:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Manual: Need to manually upload everything using File Transfer Protocol (FTP), Secure File Transfer Protocols (SFTP), etc"}),"\n",(0,t.jsx)(n.li,{children:"Automated: Can be done with a version control system and build tools."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"It starts when the developer makes some changes and pushes code to the repository"}),"\n",(0,t.jsx)(n.li,{children:"The build tools receive the signal and create a build environment identical to the production environment"}),"\n",(0,t.jsx)(n.li,{children:"It runs the tests to ensure everything in your code is working correctly"}),"\n",(0,t.jsx)(n.li,{children:"If everything is okay, the build tools connect to the server where your files will stay and upload your code"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"There are two important terms when it comes to deployment:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Continuous Integration (CI): is the process of immitating the development environment and then running the test to ensure your code is okay"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Continuous Deployment (CD)"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"CI/CD Process:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Code -> Version Control -> Build -> Test -> Deploy"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>l,a:()=>r});var t=o(7294);const i={},s=t.createContext(i);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);