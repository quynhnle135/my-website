"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3885],{3307:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var t=r(5893),a=r(1151);const i={title:"Oct 18, 2023"},o="Coding Journal: Oct 18, 2023",d={id:"learning-journal/2023/October/20231018",title:"Oct 18, 2023",description:"Leetcode and DSA",source:"@site/docs/learning-journal/2023/October/20231018.md",sourceDirName:"learning-journal/2023/October",slug:"/learning-journal/2023/October/20231018",permalink:"/docs/learning-journal/2023/October/20231018",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Oct 18, 2023"},sidebar:"tutorialSidebar",previous:{title:"Oct 09, 2023",permalink:"/docs/learning-journal/2023/October/20231009"},next:{title:"Oct 19, 2023",permalink:"/docs/learning-journal/2023/October/20231019"}},s={},l=[{value:"Leetcode and DSA",id:"leetcode-and-dsa",level:3},{value:"Graph BFS traversal",id:"graph-bfs-traversal",level:6},{value:"Graph DFS traversal",id:"graph-dfs-traversal",level:6},{value:"Docusaurus update",id:"docusaurus-update",level:3}];function c(n){const e={code:"code",h1:"h1",h3:"h3",h6:"h6",li:"li",pre:"pre",ul:"ul",...(0,a.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"coding-journal-oct-18-2023",children:"Coding Journal: Oct 18, 2023"}),"\n",(0,t.jsx)(e.h3,{id:"leetcode-and-dsa",children:"Leetcode and DSA"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Did and reviewed some problem in Leetcode 75."}),"\n",(0,t.jsx)(e.li,{children:"My goal is to go over every data structures and algorithms by the end of October"}),"\n",(0,t.jsx)(e.li,{children:"Graph review"}),"\n"]}),"\n",(0,t.jsx)(e.h6,{id:"graph-bfs-traversal",children:"Graph BFS traversal"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def BFS(graph):\n    queue = []\n    visited = []\n    traversal = []\n    for vertex in graph:\n        if vertex not in visited:\n            queue.append(vertex)\n            while queue:\n                node = queue.pop(0)\n                if node not in visited:\n                    visited.append(node)\n                    traversal.append(node)\n\n                    for neighbor in graph[node]:\n                        if neighbor not in visited:\n                            queue.append(neighbor)\n    return traversal\n\n\ndef main():\n    graph = {\n        'A': ['B', 'C'],\n        'B': ['D'],\n        'C': [],\n        'D': ['E'],\n        'E': []\n    }\n    print(BFS(graph))\n\n\nif __name__ == \"__main__\":\n    main()\n\n"})}),"\n",(0,t.jsx)(e.h6,{id:"graph-dfs-traversal",children:"Graph DFS traversal"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def DFS(graph):\n    stack = []\n    visited = []\n    traversal = []\n    for vertex in graph:\n        if vertex not in visited:\n            stack.append(vertex)\n            while stack:\n                node = stack.pop()\n                if node not in visited:\n                    visited.append(node)\n                    traversal.append(node)\n                    for neighbor in graph[node]:\n                        if neighbor not in visited:\n                            stack.append(neighbor)\n    return traversal\n\n\ndef main():\n    graph = {\n        'A': ['B', 'C'],\n        'B': ['D'],\n        'C': [],\n        'D': ['E'],\n        'E': []\n    }\n    print(DFS(graph))\n\n\nif __name__ == \"__main__\":\n    main()\n"})}),"\n",(0,t.jsx)(e.h3,{id:"docusaurus-update",children:"Docusaurus update"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Updated color theme and got rid of unnecessary files & folders"}),"\n",(0,t.jsx)(e.li,{children:"Updated footers by including my Github and LinkedIn"}),"\n",(0,t.jsxs)(e.li,{children:["What I need to do:","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Continue updating footer and header"}),"\n",(0,t.jsx)(e.li,{children:"Reformat earlier posts (code block)"}),"\n",(0,t.jsx)(e.li,{children:"Add journal and document my projects"}),"\n"]}),"\n"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},1151:(n,e,r)=>{r.d(e,{Z:()=>d,a:()=>o});var t=r(7294);const a={},i=t.createContext(a);function o(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);