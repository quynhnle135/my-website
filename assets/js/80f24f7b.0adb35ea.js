"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2597],{7673:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=t(5893),r=t(1151);const i={title:"Aug 16",description:"Wed, Aug 16"},o=void 0,a={id:"daily-practice/2023/August/aug_16_23",title:"Aug 16",description:"Wed, Aug 16",source:"@site/docs/daily-practice/2023/August/aug_16_23.md",sourceDirName:"daily-practice/2023/August",slug:"/daily-practice/2023/August/aug_16_23",permalink:"/my-website/docs/daily-practice/2023/August/aug_16_23",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Aug 16",description:"Wed, Aug 16"},sidebar:"tutorialSidebar",previous:{title:"Aug 15",permalink:"/my-website/docs/daily-practice/2023/August/aug_15_23"},next:{title:"Aug 17",permalink:"/my-website/docs/daily-practice/2023/August/aug_17_23"}},l={},d=[{value:"Smallest Even Multiple",id:"smallest-even-multiple",level:3},{value:"Maximum Numbers of Words Found in Sentences",id:"maximum-numbers-of-words-found-in-sentences",level:3},{value:"Spiral Matrix",id:"spiral-matrix",level:3},{value:"Reverse vowels in a string",id:"reverse-vowels-in-a-string",level:3}];function u(n){const e={code:"code",h3:"h3",pre:"pre",...(0,r.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h3,{id:"smallest-even-multiple",children:"Smallest Even Multiple"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'def smallest_even_multiple(n):\n    if n <= 2:\n        return 2\n    if n % 2 == 0 and n > 2:\n        return n\n    return 2 * n\n\n\ndef main():\n    print(smallest_even_multiple(5))\n    print(smallest_even_multiple(6))\n\n\nif __name__ == "__main__":\n    main()\n'})}),"\n",(0,s.jsx)(e.h3,{id:"maximum-numbers-of-words-found-in-sentences",children:"Maximum Numbers of Words Found in Sentences"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'def count_words(sentences):\n    max_words = 0\n    for s in sentences:\n        count = 0\n        for i in range(len(s)):\n            if s[i] == " " or i == len(sentences) - 1:\n                count += 1\n        max_words = max(max_words, count)\n    return max_words\n\n\ndef most_words_found(sentences):\n    max_words = 0\n    for words in sentences:\n        words = words.split()\n        max_words = max(len(words), max_words)\n    return max_words\n\n\ndef main():\n    sentences = ["alice and bob love leetcode", "i think so too", "this is great thanks very much"]\n    print(count_words(sentences))\n    print(most_words_found(sentences))\n    sentences1 = ["please wait", "continue to fight", "continue to win"]\n    print(count_words(sentences1))\n    print(most_words_found(sentences1))\n\n\nif __name__ == "__main__":\n    main()\n'})}),"\n",(0,s.jsx)(e.h3,{id:"spiral-matrix",children:"Spiral Matrix"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'def spiral_matrix(matrix):\n    # row pointers\n    left = 0\n    right = len(matrix[0])\n\n    # column pointers\n    top = 0\n    bottom = len(matrix)\n\n    res = []\n\n    while (left < right) and (top < bottom):\n        # Get value from the top outer row\n        for i in range(left, right):\n            res.append(matrix[top][i])\n        top += 1\n\n        # Get value from the right column\n        for i in range(top, bottom):\n            res.append(matrix[i][right - 1])\n        right -= 1\n\n        if not (left < right and top < bottom):\n            break\n\n        # Get value from the bottom row\n        for i in range(right - 1, left - 1, - 1):\n            res.append(matrix[bottom - 1][i])\n        bottom -= 1\n\n        # Get value from the left column\n        for i in range(bottom - 1, top - 1, -1):\n            res.append(matrix[i][left])\n        left += 1\n    return res\n\n\ndef main():\n    matrix1 = [[1, 2, 3],\n               [4, 5, 6],\n               [7, 8, 9]]\n    print(spiral_matrix(matrix1))\n\n    matrix2 = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]\n    print(spiral_matrix(matrix2))\n\n\nif __name__ == "__main__":\n    main()\n'})}),"\n",(0,s.jsx)(e.h3,{id:"reverse-vowels-in-a-string",children:"Reverse vowels in a string"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def reverse_vowels(s):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    vowels_found = []\n    result = \"\"\n    for i in range(len(s)):\n        if s[i] in vowels:\n            vowels_found.append(s[i])\n\n    for i in range(len(s)):\n        if s[i] in vowels:\n            result += vowels_found.pop()\n        else:\n            result += s[i]\n    return result\n\n\ndef reverse_vowels_two_pointers(s):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    start = 0\n    end = len(s) - 1\n    s = list(s)\n    while start < end:\n        if (s[start] in vowels) and (s[end] in vowels):\n            s[start], s[end] = s[end], s[start]\n            start += 1\n            end -= 1\n        elif (s[start] in vowels) and (not s[end] in vowels):\n            end -= 1\n        elif (s[end] in vowels) and (not s[start] in vowels):\n            start += 1\n        else:\n            start += 1\n            end -= 1\n    return \"\".join(s)\n\n\ndef main():\n    s1 = \"hello\"\n    print(reverse_vowels(s1))  # holle\n    print(reverse_vowels_two_pointers(s1))\n\n    s2 = \"leetcode\"\n    print(reverse_vowels(s2))  # leotcede\n    print(reverse_vowels_two_pointers(s2))\n\n    s3 = \"aA\"\n    print(reverse_vowels(s3))\n    print(reverse_vowels_two_pointers(s3))\n\n\nif __name__ == \"__main__\":\n    main()\n"})})]})}function m(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(u,{...n})}):u(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>a,a:()=>o});var s=t(7294);const r={},i=s.createContext(r);function o(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);