"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7880],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(t),p=i,f=m["".concat(s,".").concat(p)]||m[p]||d[p]||a;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9703:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=t(7462),i=(t(7294),t(3905));const a={title:"Oct 22"},o=void 0,l={unversionedId:"learning-journal/2023/October/oct_22_23",id:"learning-journal/2023/October/oct_22_23",title:"Oct 22",description:"What I did today",source:"@site/docs/learning-journal/2023/10 - October/oct_22_23.md",sourceDirName:"learning-journal/2023/10 - October",slug:"/learning-journal/2023/October/oct_22_23",permalink:"/my-website/docs/learning-journal/2023/October/oct_22_23",draft:!1,tags:[],version:"current",frontMatter:{title:"Oct 22"},sidebar:"tutorialSidebar",previous:{title:"Oct 20",permalink:"/my-website/docs/learning-journal/2023/October/oct_20_23"},next:{title:"Oct 29",permalink:"/my-website/docs/learning-journal/2023/October/oct_29_23"}},s={},u=[{value:"What I did today",id:"what-i-did-today",level:3},{value:"Notes from Coding Interview Practice Joceline",id:"notes-from-coding-interview-practice-joceline",level:4},{value:"My code for Find the Duplicate Number",id:"my-code-for-find-the-duplicate-number",level:4},{value:"My code for Missing Numbers problem",id:"my-code-for-missing-numbers-problem",level:4}],c={toc:u},m="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(m,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"what-i-did-today"},"What I did today"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Finished all exercises in Sliding Window category in Leetcode 75:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Maximum Average Subarray I"),(0,i.kt)("li",{parentName:"ul"},"Maximum Number of Vowels in a Substring of Given Length"),(0,i.kt)("li",{parentName:"ul"},"Max Consecutive Ones III"),(0,i.kt)("li",{parentName:"ul"},"Longest Subarray of 1's After Deleting One Element"))),(0,i.kt)("li",{parentName:"ul"},"Reviewed and tried to finished my To Do List Django project (my goal is to finish deploying it by the end of next week and link it to my resume)"),(0,i.kt)("li",{parentName:"ul"},"Coding Interview practice Joceline")),(0,i.kt)("h4",{id:"notes-from-coding-interview-practice-joceline"},"Notes from Coding Interview Practice Joceline"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"She's very new to this coding interview practice so it takes her 50 minutes to solve an easy problem (Squares of sorted array)"),(0,i.kt)("li",{parentName:"ul"},"She needs to pay more attention to global and local variables, and Javascript syntax. Her code still has a lot of bugs"),(0,i.kt)("li",{parentName:"ul"},"Instead jumpring right into coding, she should've discussed her approach to solve the given problem"),(0,i.kt)("li",{parentName:"ul"},"For my turn, she asked me to 2 easy Array question:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Find the Duplicate Number: I solve this using dictionary which helped me have the time complexity O(n) and space complexity O(n). However, she also mentioned that I can solve this problem by using marking negative to reach O(1) for space complexity"),(0,i.kt)("li",{parentName:"ul"},"Missing number: I solved this problem also using a dictionary. I find my solution not too effective since I use three for loops (not nested) to and having another array. Will work on the more optimal solution for this"))),(0,i.kt)("li",{parentName:"ul"},"I solved these two problems pretty quick, it only took me 20 minutes to finish my turn but it think it's because I've seen these problems before"),(0,i.kt)("li",{parentName:"ul"},"What I can learn from Joceline:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Maybe I should apply for apprenticeship to boost up my resume? "),(0,i.kt)("li",{parentName:"ul"},"I should've finsihed my projects and have my resume ready and send it out. "),(0,i.kt)("li",{parentName:"ul"},"Somehow I find myself a little bit more confident after today's session and have more motivation to speed up my process. It's good to have a girl peer in the same field and situation like me. "))),(0,i.kt)("li",{parentName:"ul"},"Our practice shedule: 5:00PM-6:30PM every Monday, Wednesday, and Thursday")),(0,i.kt)("h4",{id:"my-code-for-find-the-duplicate-number"},"My code for Find the Duplicate Number"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def findDuplicated(nums):\n  num_dict = {}\n  for num in nums:\n    if num in num_dict:\n      return num\n    else:\n      num_dict[num] = 1\n  return -1\n\n\nprint(findDuplicated([2, 1, 5, 2, 3, 3, 4]))  # 2\nprint(findDuplicated([2, 1, 5, 3, 3, 2, 4]))  # 3\nprint(findDuplicated([1, 2, 3, 4]))\n\n\n\n# Given an array of integers between 1 and n, inclusive where n is the length of the array. Write a function that returns the first integer that appears more than once (when array if read from left to right)\n\n# example: [1, 2, 3, 3]\n# 3\n\n#example 2: [2,1,5,2,3,3,4]\n#            ^ ^\n#2\n\n#ex: [2,1,5,3,3,2,4]\n# 3\n\n# second approach: no need to use another data structure\n# use nested loop\n# for i = 0 -> nums.length\n#    for j = i + 1\n#       compare: if nums[i] == nums[j]: return nums[i]\n# return -1\n\n# Time complexity: O(n^2)\n# Space complexity: O(1)\n\n# first approach\n# dictionary {value: appearance}\n# traverse thru the array\n# if the cur value not in the dict: dict[value] = 1\n# else: return value\n# finish for loop, return -1\n# time complexity: O (n)\n# space: O(n)\n\n# notes\n# if no duplicated found -> return -1\n\n")),(0,i.kt)("h4",{id:"my-code-for-missing-numbers-problem"},"My code for Missing Numbers problem"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# Youre given an unordered list of unique integers nums in the range [1,n], where n represents the length of nums +2. this means that two numbers in this range are missing from the list. Write a function that takes in this list and returns a new list with the two missing numbers, sorted numerically .\n\n# notes:\n# not sorted list\n# return the sorted of missing numbers\n# no duplicated\n\n# nums = [1,4,3] -> [1, 3, 4]\n#[2,5] n is 5  -> [1,2,3,4,5]\n\n# nums = [1, 2]\n# [3, 4] n = 4 -> [1, 2, 3, 4]\n\n# first approach\n# sort the given nums nums = [1, 3, 4]\n#                             ^\n# n = len(nums) + 2 = 5\n# dict = {1: 1, 2: 1, 3: 1, 4: 1, 5: 1}\n# traverse value in the given nums:\n#    check if current value is in dictionary:\n#             dict[value] -= 1\n# res = []\n# go over the dictionary\n# if dict[value] != 0:\n#     res.append(value)\n# return res\n\n# time: O(n)\n# space: O(n)\n\n\ndef findMissingNumbers(nums):\n  res = []\n  num_dict = {}\n  n = len(nums) + 2\n  for i in range(n):\n    value = i + 1\n    num_dict[value] = 1\n  for num in nums:\n    if num in num_dict:\n      num_dict[num] -= 1\n  for key in num_dict:\n    if num_dict[key] != 0:\n      res.append(key)\n  return res\n\n\nprint(findMissingNumbers([1, 4, 3]))  # 2, 5\nprint(findMissingNumbers([1, 2]))  # 3, 4\n\n")))}d.isMDXComponent=!0}}]);