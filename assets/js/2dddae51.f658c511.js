"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5051],{518:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});var a=e(5893),o=e(1151);const i={title:"Feb 14, 2024"},l="Coding Journal: Feb 14, 2024",t={id:"learning-journal/2024/February/20240214",title:"Feb 14, 2024",description:"- Continued with Data Structures for Coding Interview in JavaScript (Arrays review):",source:"@site/docs/learning-journal/2024/February/20240214.md",sourceDirName:"learning-journal/2024/February",slug:"/learning-journal/2024/February/20240214",permalink:"/docs/learning-journal/2024/February/20240214",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Feb 14, 2024"},sidebar:"tutorialSidebar",previous:{title:"Feb 06, 2024",permalink:"/docs/learning-journal/2024/February/20240206"},next:{title:"Feb 15, 2024",permalink:"/docs/learning-journal/2024/February/20240215"}},s={},c=[{value:"JS&#39;s variables basics review",id:"jss-variables-basics-review",level:4},{value:"Array&#39;s basics review",id:"arrays-basics-review",level:4},{value:"Remove even integers from an array",id:"remove-even-integers-from-an-array",level:4},{value:"Merge two sorted arrays",id:"merge-two-sorted-arrays",level:4},{value:"Find two numbers that add up to &quot;value&quot; (two sum)",id:"find-two-numbers-that-add-up-to-value-two-sum",level:4},{value:"Array of products of all elements",id:"array-of-products-of-all-elements",level:4},{value:"Find minimum vlaue in array",id:"find-minimum-vlaue-in-array",level:4},{value:"Find first unique integer in an array",id:"find-first-unique-integer-in-an-array",level:4},{value:"Find second maximum value in an array",id:"find-second-maximum-value-in-an-array",level:4},{value:"Right rotate an array by n",id:"right-rotate-an-array-by-n",level:4},{value:"Rearrange positive and negative values",id:"rearrange-positive-and-negative-values",level:4},{value:"Maximum sub array",id:"maximum-sub-array",level:4}];function u(n){const r={code:"code",h1:"h1",h4:"h4",li:"li",pre:"pre",ul:"ul",...(0,o.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h1,{id:"coding-journal-feb-14-2024",children:"Coding Journal: Feb 14, 2024"}),"\n",(0,a.jsx)(r.h1,{id:"1-what-i-learned-and-did-today",children:"1. What I Learned and Did Today"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["Continued with Data Structures for Coding Interview in JavaScript (Arrays review):","\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"JS's variable basics review"}),"\n",(0,a.jsx)(r.li,{children:"Array's basics review"}),"\n",(0,a.jsx)(r.li,{children:"Remove even integers from an array"}),"\n",(0,a.jsx)(r.li,{children:"Merge two sorted arrays"}),"\n",(0,a.jsx)(r.li,{children:'Find two numbers that add up to "value" (two sum)'}),"\n",(0,a.jsx)(r.li,{children:"Array of products of all elements"}),"\n",(0,a.jsx)(r.li,{children:"Find minimum vlaue in array"}),"\n",(0,a.jsx)(r.li,{children:"Find first unique integer in an array"}),"\n",(0,a.jsx)(r.li,{children:"Find second maximum value in an array"}),"\n",(0,a.jsx)(r.li,{children:"Right rotate an array by n"}),"\n",(0,a.jsx)(r.li,{children:"Rearrange positive and negative values"}),"\n",(0,a.jsx)(r.li,{children:"Maximum sub array"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.h1,{id:"2-question-i-had-today",children:"2. Question I Had Today"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"I didn't haven any question for today."}),"\n"]}),"\n",(0,a.jsx)(r.h1,{id:"3-what-i-found-challenging",children:"3. What I Found Challenging"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"I didn't find anything challenging for today."}),"\n"]}),"\n",(0,a.jsx)(r.h1,{id:"4-code-i-wrote-today",children:"4. Code I Wrote Today"}),"\n",(0,a.jsx)(r.h4,{id:"jss-variables-basics-review",children:"JS's variables basics review"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",metastring:'title="variables_practice.js"',children:"const PI = 3.14;\nconsole.log(PI);\n// PI = 3;    CODE WILL THROW AN ERROR\n// console.log(PI);\n\nfunction foo() {\n    var n = 6;\n    console.log(n);\n}\n\nvar n = 10;\nconsole.log(n);\nfoo();\n\nvar myVar = 10;\nconsole.log(myVar);\nvar myVar = 15;\nconsole.log(myVar);\n\n// function foo1(n) {\n//     if (n === 6) {\n//         let num = 2;\n//     }\n//     console.log(num);\n// }\n\n// console.log(foo1(6));\n"})}),"\n",(0,a.jsx)(r.h4,{id:"arrays-basics-review",children:"Array's basics review"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",metastring:'title="arrays_practice.js"',children:"var ExampleList = [3.14159, 'apple', 23]\nvar EmptyList = []\nconsole.log(ExampleList)\nconsole.log(EmptyList)\n\nvar anArray = [2, 'Educative', 'A']\nfunction foo() {\n    console.log('Hello from foo()!');\n}\nvar anotherArray = [anArray, 'JavaScript', foo, ['yet another array']]\n\nconsole.log(anotherArray[0]) // Elements of anArray\nconsole.log(anotherArray[0][1]) // Second element of anArray\nconsole.log(anotherArray[1]) // JavaScript\nconsole.log(anotherArray[3]) // yet another array\n\n// you can also invoke the function insde an array\nanotherArray[2]() // Hello from foo()!\n\n// push() function -> O(1) time complexity\nvar array = [1, 3, 5, 'seven']\nconsole.log(array)\narray.push(9)\nconsole.log(array)\n\n// pop function -> O(1) time complexity -> pop the LAST element in the array\nvar top = array.pop()\nconsole.log(top)\nconsole.log(array)\n\n// shift() function -> pop the FIRST element in the array\nconsole.log(array.shift())\nconsole.log(array)\n\n// unshift() function -> insert value to the beginning of the array\narray.unshift(100)\nconsole.log(array)\n\n// delete keyword\ndelete array[3]\nconsole.log(array)\n\n// reverse() function -> O(n) time complexity\nreversedArray = array.slice().reverse()\nconsole.log(array)\nconsole.log(reversedArray)\n\nvar myArray = [1, 2, 3, 4, 5]\nconsole.log(\"myArray: \" + myArray)\n// add 100 at index 2\nmyArray.splice(2, 0, 100)\nconsole.log(myArray)\n// remove 2 values starting at index 1\nmyArray.splice(1, 2)\nconsole.log(myArray)\n// to add and remove elements simultaneously: remove 1 element starting at index 2 and add ten and 8\nmyArray.splice(2, 1, \"ten\", 8)\nconsole.log(myArray)\n\n// slicing\nvar newArray = myArray.slice(1, 3)\nconsole.log(\"newArray: \" + newArray)\n\n// concat \nvar array1 = [1, 3, 5]\nvar array2 = [2, 4, 6]\nconsole.log(\"array1: \" + array1)\nconsole.log(\"array2: \" + array2)\nvar mergedArray = array1.concat(array2) \nvar anotherMergedArray = array2.concat(array1)\nconsole.log(\"mergedArray: \" + mergedArray) \nconsole.log(\"anotherMergedArray: \" + anotherMergedArray) \n\n// for...of statement\nfor (let value of array1) {\n    console.log(value);\n}\n"})}),"\n",(0,a.jsx)(r.h4,{id:"remove-even-integers-from-an-array",children:"Remove even integers from an array"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",children:"function removeEven(arr) {\n    var res = [];\n    for (let num of arr) {\n        if (num % 2 !== 0) {\n            res.push(num);\n        }\n    } \n    return res;\n}\n\n// Using filter() and lambda function\nfunction removeEvenI(arr) {\n    return arr.filter((v => (v % 2 !== 0)));\n}\n\nconsole.log(removeEven(arr=[1, 2, 3, 4, 5]));\nconsole.log(removeEvenI([1, 2, 3, 4, 5]))\n"})}),"\n",(0,a.jsx)(r.h4,{id:"merge-two-sorted-arrays",children:"Merge two sorted arrays"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",children:"function mergeSortedArr(arr1, arr2) {\n    var res = [];\n    var index1 = 0;\n    var index2 = 0;\n    while (index1 < arr1.length && index2 < arr2.length) {\n        var cur1 = arr1[index1];\n        var cur2 = arr2[index2];\n        if (cur1 < cur2) {\n            res.push(cur1);\n            index1++;\n        } else {\n            res.push(cur2);\n            index2++;\n        }\n    }\n    while (index1 < arr1.length) {\n        res.push(arr1[index1]);\n        index1++;\n    }\n\n    while (index2 < arr2.length) {\n        res.push(arr2[index2]);\n        index2++;\n    }\n\n    return res;\n}\n\nfunction mergeSortedArrSpreadOp(arr1, arr2) {\n    return [...arr1, ...arr2].sort((a, b) => a - b);\n}\nconsole.log(mergeSortedArr(arr1=[1, 3, 4, 5], arr2=[2, 6, 7, 8]));\nconsole.log(mergeSortedArrSpreadOp(arr1=[1, 3, 4, 5], arr2=[2, 6, 7, 8]));\nconsole.log(mergeSortedArr(arr1=[1, 3, 5], arr2=[2, 4, 6, 8, 10]));\nconsole.log(mergeSortedArrSpreadOp(arr1=[1, 3, 5], arr2=[2, 4, 6, 8, 10]));\n"})}),"\n",(0,a.jsx)(r.h4,{id:"find-two-numbers-that-add-up-to-value-two-sum",children:'Find two numbers that add up to "value" (two sum)'}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",children:"function twoSum(arr, target) {\n    var map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        if (map.has(target - arr[i])) {\n            return [map.get(target - arr[i]), i];\n        } else {\n            map.set(arr[i], i);\n        }\n    }\n    return [-1, -1];\n}\n\n\nfunction findSumBruteForce(arr, value) {\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (i !== j) {\n                if (arr[i] + arr[j] === value) {\n                    return [arr[i], arr[j]]\n                }\n            }\n        }\n    }\n    return []\n}\n\nfunction findSum(arr, value) {\n    arr.sort((a, b) => a - b);\n    var left = 0;\n    var right = arr.length - 1;\n    while (left < right) {\n        let curSum = arr[left] + arr[right];\n        if (curSum === value) {\n            return [arr[left], arr[right]];\n        } else if (value > curSum) {\n            right--;\n        } else {\n            left++;\n        }\n    }\n    return []\n}\n\nconsole.log(twoSum(arr=[2, 7, 11, 15],target=9)); // [0, 1]\nconsole.log(twoSum(arr=[3, 2, 4], target=6)) //  [1, 2]\nconsole.log(twoSum(arr=[3, 3], target=6)) // [0, 1]\n\nvar myArr = [5, 4, 2, 3, 1]\nconsole.log(myArr.indexOf(5))\nconsole.log(myArr.indexOf(10))\nmyArr.sort();\nconsole.log(myArr)\n\nconsole.log(findSumBruteForce(arr=[1, 21, 3, 14, 5, 60, 7, 6], value=81)) // 21 60\nconsole.log(findSum(arr=[1, 21, 3, 14, 5, 60, 7, 6], value=81)) // 21 60\n"})}),"\n",(0,a.jsx)(r.h4,{id:"array-of-products-of-all-elements",children:"Array of products of all elements"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",children:"function arrayOfProductI(arr) {\n    var result = [];\n    for (let i = 0; i < arr.length; i++) {\n        var curProduct = 1;\n        for (let j = 0; j < arr.length; j++) {\n            if (j != i) {\n                curProduct *= arr[j];\n            }\n        }\n        result.push(curProduct);\n    }\n    return result;\n    \n}\n\nfunction arrayOfProductII(arr) {\n    var product = [];\n    var temp = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product[i] = temp;\n        temp *= arr[i];\n    }\n    temp = 1;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        product[i] *= temp;\n        temp *= arr[i];\n    }\n    return product;\n}\n\nconsole.log(arrayOfProductI(arr=[1, 2, 3, 4, 5])) // 120 60 40 30 24\nconsole.log(arrayOfProductII(arr=[1, 2, 3, 4, 5])) // 120 60 40 30 24\nconsole.log(arrayOfProductI(arr=[1, 2, 0, 4, 5])) \nconsole.log(arrayOfProductII(arr=[1, 2, 0, 4, 5])) \n"})}),"\n",(0,a.jsx)(r.h4,{id:"find-minimum-vlaue-in-array",children:"Find minimum vlaue in array"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",children:"function findMinimumI(arr) {\n    return Math.min(...arr);\n}\n\nfunction findMinimumII(arr) {\n    arr.sort();\n    return arr[0];\n}\n\nfunction findMinimumIII(arr) {\n    var min = Number.MAX_VALUE;\n    for (let num of arr) {\n        if (num < min) {\n            min = num;\n        }\n    }\n    return min;\n}\n\nconsole.log(findMinimumI(arr=[9, 2, 3, 6])) // 2\nconsole.log(findMinimumI(arr=[4, 2, 1, 5, 0])) // 0\n\nconsole.log(findMinimumII(arr=[9, 2, 3, 6])) // 2\nconsole.log(findMinimumII(arr=[4, 2, 1, 5, 0])) // 0\n\nconsole.log(findMinimumIII(arr=[9, 2, 3, 6])) // 2\nconsole.log(findMinimumIII(arr=[4, 2, 1, 5, 0])) // 0\n\n// arr1 = [9, 2, 3, 6]\n// console.log(Math.min(...arr1));\n"})}),"\n",(0,a.jsx)(r.h4,{id:"find-first-unique-integer-in-an-array",children:"Find first unique integer in an array"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",children:"function findFirstUniqueInteger(arr) {\n    let map = new Map();\n    for (let num of arr) {\n        if (map.has(num)) {\n            map.set(num, map.get(num) + 1);\n        } else {\n            map.set(num, 1);\n        }\n    }\n    for (let item of map) {\n        let key = item[0];\n        let value = item[1];\n        if (value === 1) {\n            return key;\n        }\n    }\n    return -1;\n}\n\nfunction findFirstUniqueIntegerI(arr) {\n    for (var index1 = 0; index1 < arr.length; index1++) {\n        var index2 = 0;\n        while (index2 < arr.length) {\n            if ((index1 != index2) && (arr[index1] === arr[index2])) {\n                break;\n            } else {\n                index2++;\n            }\n            \n        }\n        if (index2 == arr.length) {\n            return arr[index1];\n        }\n    }\n    return null;\n}\n\nconsole.log(findFirstUniqueInteger(arr=[9, 2, 3, 2, 6, 6]));\nconsole.log(findFirstUniqueIntegerI(arr=[9, 2, 3, 2, 6, 6]));\n"})}),"\n",(0,a.jsx)(r.h4,{id:"find-second-maximum-value-in-an-array",children:"Find second maximum value in an array"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",children:"function secondMaxI(arr) {\n    var firstMax = Number.NEGATIVE_INFINITY;\n    var secondMax = Number.NEGATIVE_INFINITY;\n    for (let num of arr) {\n        if (num > firstMax) {\n            firstMax = num;\n        }\n    }\n\n    for (let num of arr) {\n        if ((num < firstMax) && (num > secondMax)) {\n            secondMax = num;\n        }\n    }\n    return secondMax;\n}\n\nfunction secondMaxII(arr) {\n    var firstMax = Number.NEGATIVE_INFINITY;\n    var secondMax = Number.NEGATIVE_INFINITY;\n    for (let num of arr) {\n        if (num > firstMax) {\n            secondMax = firstMax;\n            firstMax = num;\n        } else if (num < firstMax && num > secondMax) {\n            secondMax = num;\n        }\n    }\n    return secondMax;\n}\n\nfunction secondMaxIII(arr) {\n    arr.sort((a, b) => a - b);\n    if (arr.length >= 2) {\n        return arr[arr.length - 2];\n    }\n    return null;\n}\n\nconsole.log(secondMaxI([9, 2, 3, 6])); // 6\nconsole.log(secondMaxII([9, 2, 3, 6])); // 6\nconsole.log(secondMaxIII([9, 2, 3, 6])); // 6\n\nconsole.log(secondMaxI([4, 2, 1, 5, 0])); // 4\nconsole.log(secondMaxII([4, 2, 1, 5, 0])); // 4\nconsole.log(secondMaxII([4, 2, 1, 5, 0])); // 4\n\nconsole.log(secondMaxI([-2, 9])); // -2\nconsole.log(secondMaxII([-2, 9])); // -2\nconsole.log(secondMaxIII([-2, 9])); // -2\n\nconsole.log(secondMaxI([-2, -3, -5, -7])) // -3\nconsole.log(secondMaxII([-2, -3, -5, -7])) // -3\nconsole.log(secondMaxIII([-2, -3, -5, -7])) // -3\n\nconsole.log(secondMaxI([4, 10, 10, 8, 9]))  // 9\nconsole.log(secondMaxII([4, 10, 10, 8, 9]))  // 9\nconsole.log(secondMaxIII([4, 10, 10, 8, 9]))  // 9\n\n// console.log(Number.MIN_VALUE);\n\nconsole.log(Number.NEGATIVE_INFINITY);\nlet myVar = [-2, -3, -5, -7];\nlet sortedArr = myVar.sort((a, b) => a - b);\n// console.log(sortedArr);\n\nlet array = [4, 10, 10, 8, 9];\nlet set = new Set(array);\n// console.log(set);\n"})}),"\n",(0,a.jsx)(r.h4,{id:"right-rotate-an-array-by-n",children:"Right rotate an array by n"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",children:"function rotateArrayI(arr, n) {\n    let res = [];\n    for (let i = n - 1; i < arr.length; i++) {\n        res.push(arr[i]);\n    }\n    for (let i = 0; i < n - 1; i++) {\n        res.push(arr[i]);\n    }\n    return res;\n}\n\nfunction rotateArrayII(arr, n) {\n    return (arr.slice(n - 1)).concat(arr.slice(0, n - 1));\n}\n\nfunction rotateArrayIII(arr, n) {\n    return (arr.splice(arr.length - n)).concat(arr.splice(0, arr.length));\n}\n\n\nconsole.log(rotateArrayI(arr=[1, 2, 3, 4, 5], n=3))  // [3 4 5 1 2 ]\nconsole.log(rotateArrayII(arr=[1, 2, 3, 4, 5], n=3))  // [3 4 5 1 2 ]\nconsole.log(rotateArrayIII(arr=[1, 2, 3, 4, 5], n=3))  // [3 4 5 1 2 ]\n\n\n// var myArr = [1, 2, 3, 4, 5];\n// console.log(myArr);\n// var firstHalf = myArr.splice(myArr.length - 3);\n// console.log(firstHalf);\n// console.log(myArr);\n// var secondHalf = myArr.splice(0, myArr.length);\n// console.log(secondHalf);\n// console.log(firstHalf.concat(secondHalf));\n"})}),"\n",(0,a.jsx)(r.h4,{id:"rearrange-positive-and-negative-values",children:"Rearrange positive and negative values"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",children:"function rearrangeArrayI(arr) {\n    var res = [];\n    for (let num of arr) {\n        if (num < 0) {\n            res.push(num);\n        }\n    }\n    for (let num of arr) {\n        if (num >= 0) {\n            res.push(num);\n        }\n    }\n    return res;\n}\n\nfunction rearrangeArrayII(arr) {\n    var neg = [];\n    var pos = [];\n    for (let num of arr) {\n        if (num < 0) {\n            neg.push(num);\n        } else {\n            pos.push(num);\n        }\n    }\n    return neg.concat(pos);\n}\n\n// Rearrnaging in place\nfunction rearrangeArrayIII(arr) {\n    var left = 0;\n    var temp;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n            temp = arr[i];\n            arr[i] = arr[left];\n            arr[left] = temp;\n            left++;\n        }\n        \n    }\n    return arr;\n}\n\nconsole.log(rearrangeArrayI([10, -1, 20, 4, 5, -9, -6]))\nconsole.log(rearrangeArrayII([10, -1, 20, 4, 5, -9, -6]))\nconsole.log(rearrangeArrayIII([10, -1, 20, 4, 5, -9, -6]))\n"})}),"\n",(0,a.jsx)(r.h4,{id:"maximum-sub-array",children:"Maximum sub array"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-javascript",children:"function findMaxSubSum(arr) {\n    let maxSum = 0;\n    var curSum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (curSum < 0) {\n            curSum = arr[i];\n        } else {\n            curSum += arr[i];\n        }\n        if (maxSum < curSum) {\n            maxSum = curSum;\n        }\n    }\n    return maxSum;\n}\n\nfunction findMaxSumSub(arr) {\n    maxSum = Number.NEGATIVE_INFINITY\n    cur_sum = 0\n    for (let num of arr) {\n        cur_sum += num\n        maxSum = Math.max(maxSum, cur_sum)\n        if (cur_sum < num) {\n            cur_sum = num\n        }\n    }\n    return maxSum\n}\n\nconsole.log(findMaxSubSum([-4, 2, -5, 1, 2, 3, 6, -5, 1])); // 12\nconsole.log(findMaxSumSub([-4, 2, -5, 1, 2, 3, 6, -5, 1])); // 12\n"})})]})}function d(n={}){const{wrapper:r}={...(0,o.a)(),...n.components};return r?(0,a.jsx)(r,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}},1151:(n,r,e)=>{e.d(r,{Z:()=>t,a:()=>l});var a=e(7294);const o={},i=a.createContext(o);function l(n){const r=a.useContext(i);return a.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function t(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:l(n.components),a.createElement(i.Provider,{value:r},n.children)}}}]);